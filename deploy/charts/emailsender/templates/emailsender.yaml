apiVersion: apps/v1
kind: Deployment
metadata:
  name: emailsender
  namespace: {{ .Release.Namespace }}
  labels:
    app: emailsender
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: emailsender
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: emailsender
    spec:
      serviceAccountName: emailsender
      containers:
        - name: emailsender
          image: "{{ .Values.image.repo }}:{{ .Values.image.tag }}"
          imagePullPolicy: IfNotPresent
          command:
            - /acscs/emailsender
          env:
            - name: CLUSTER_ID
              value: {{ .Values.clusterId }}
            - name: CLUSTER_NAME
              value: {{ .Values.clusterName }}
            - name: ENVIRONMENT
              value: {{ .Values.environment }}
            - name: SENDER_ADDRESS
              value: {{ .Values.senderAddress }}
            - name: EMAIL_PROVIDER
              value: {{ .Values.emailProvider }}
            - name: HTTPS_CERT_FILE
              value: "/var/run/certs/tls.crt"
            - name: HTTPS_KEY_FILE
              value: "/var/run/certs/tls.key"
            - name: DATABASE_SSL_MODE
              value: {{ .Values.db.sslMode }}
            - name: DATABASE_CA_CERT_FILE
              value: {{ .Values.db.caCertFile }}
            {{- if .Values.authConfigFromKubernetes }}
            - name: AUTH_CONFIG_FROM_KUBERNETES
              value: "true"
            {{- end }}
            {{- if .Values.enableHTTPS }}
            - name: ENABLE_HTTPS
              value: "true"
            {{- end }}
            - name: AWS_REGION
              value: {{ .Values.aws.region }}
            - name: AWS_ROLE_ARN
              valueFrom:
                secretKeyRef:
                  name: emailsender-parameters
                  key: "aws-role-arn"
            - name: AWS_WEB_IDENTITY_TOKEN_FILE
              value: "/var/run/secrets/tokens/aws-token"
          ports:
            - name: monitoring
              containerPort: 9090
            - name: server
              containerPort: 8080
          resources:
            limits:
              memory: {{ .Values.resources.limits.memory | quote }}
            requests:
              cpu: {{ .Values.resources.requests.cpu | quote }}
              memory: {{ .Values.resources.requests.memory | quote }}
          volumeMounts:
          - name: aws-token
            mountPath: /var/run/secrets/tokens
            readOnly: true
          - name: emailsender-db
            mountPath: /secrets
            readOnly: true
          {{- if .Values.enableHTTPS }}
          - name: emailsender-tls
            mountPath: /var/run/certs
            readOnly: true
          {{- end }}
      volumes:
        - name: emailsender-db
          secret:
            secretName: emailsender-db # pragma: allowlist secret
        {{- if .Values.enableHTTPS }}
        - name: emailsender-tls
          secret:
            secretName: emailsender-tls # pragma: allowlist secret
        {{- end }}
        - name: aws-token
          projected:
            sources:
              - serviceAccountToken:
                  path: aws-token
                  audience: sts.amazonaws.com
                  expirationSeconds: 3600
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: emailsender
  name: emailsender
  namespace: {{ .Release.Namespace }}
  annotations:
    service.beta.openshift.io/serving-cert-secret-name: emailsender-tls
spec:
  ports:
  - name: 443-8080
    port: 443
    protocol: TCP
    targetPort: 8080
  selector:
    app: emailsender
  type: ClusterIP
