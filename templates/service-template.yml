---
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: fleet-manager-service
  annotations:
    openshift.io/display-name: Fleet Manager API
    description: ACS Services Fleet Manager API
    tags: golang
    iconClass: icon-shadowman
    template.openshift.io/provider-display-name: Red Hat, Inc.
    template.openshift.io/documentation-url: https://gitlab.cee.redhat.com/service/
labels:
  template: fleet-manager
parameters:

- name: ENVIRONMENT
  displayName: Environment
  description: Which ACS Service Fleet Manager environment to use for this deployment
  value: production

- name: NAMESPACE
  displayName: Namespace
  description: Namespace to deploy the service to

- name: CENTRAL_IDP_CLIENT_ID
  displayName: Central's IdP client ID
  description: OIDC client ID to pass to Central's auth config

- name: CENTRAL_IDP_ISSUER
  displayName: Central's IdP issuer
  description: OIDC issuer URL to pass to Central's auth config

- name: IMAGE_REGISTRY
  displayName: Image Registry
  required: true

- name: IMAGE_REPOSITORY
  displayName: Image Repository
  required: true

- name: VERSION
  displayName: Image version
  value: latest

- name: IMAGE_TAG
  displayName: Image tag
  value: latest

- name: GLOG_V
  displayName: GLOG V Level
  description: Log verbosity level
  value: "10"

- name: MEMORY_REQUEST
  description: Memory request for the API pods.
  value: "512Mi"

- name: MEMORY_LIMIT
  description: Memory limit for the API pods.
  value: "1Gi"

- name: CPU_REQUEST
  description: CPU request for the API pods.
  value: "200m"

- name: CPU_LIMIT
  description: CPU limit for the API pods.
  value: "1"

- name: JWKS_URL
  displayName: JWK Token Certificate URL

- name: OCM_URL
  displayName: OCM API Base URL
  description: Base path for all OCM APIs

- name: AMS_URL
  displayName: AMS API Base URL
  description: Base path for all AMS APIs

- name: OCM_DEBUG
  displayName: OCM API Debug mode
  description: Debug mode for OCM API client
  value: "false"

- name: REPLICAS
  description: Number of replicas of the service to run.
  value: "3"

- name: ENABLE_HTTPS
  displayName: Enable HTTPS
  description: Enable HTTPS rather than HTTP
  value: "true"

- name: API_SERVER_BINDADDRESS
  displayName: API Server Bindaddress
  description: API server bind adddress
  value: :8000

- name: METRICS_SERVER_BINDADDRESS
  displayName: Metrics Server Bindaddress
  description: Metrics server bind adddress
  value: :8080

- name: HEALTH_CHECK_SERVER_BINDADDRESS
  displayName: Health check Server Bindaddress
  description: Health check server bind adddress
  value: :8083

- name: DATABASE_SECRET_NAME
  displayName: Database secret name
  description: Name of k8s secret that contains credentials for the fleet manager RDS database
  value: "acs-fleet-manager-rds"

- name: DB_MAX_OPEN_CONNS
  displayName: Maximum Open Database Connections
  description: Maximum number of open database connections per pod
  value: "50"

- name: DB_SSLMODE
  displayName: DB SSLmode
  description: Database ssl mode (disable | require | verify-ca | verify-full)
  value: "disable"

- name: ENABLE_DB_DEBUG
  displayName: Enable DB Debug
  description: framework's debug mode
  value: "false"

- name: ENABLE_METRICS_HTTPS
  displayName: Enable Metrics HTTPS
  description: Enable HTTPS for metrics server
  value: "false"

- name: ENABLE_OCM_MOCK
  displayName: Enable OCM Mock
  description: Enable mock ocm client
  value: "false"

- name: OCM_MOCK_MODE
  displayName: OCM mock mode
  description: OCM mock mode
  value: "emulate-server"

- name: ENABLE_SENTRY
  displayName: Enable Sentry Error Reporting
  value: "false"

- name: SENTRY_URL
  displayName: Sentry base URL
  description: Base URL (without https://) of sentry server
  value: "sentry.autom8.in"

- name: SENTRY_PROJECT
  displayName: Sentry Project ID
  value: "8"

- name: ENABLE_SENTRY_DEBUG
  displayName: Enable Sentry Debug Logging
  value: "false"

- name: SENTRY_TIMEOUT
  displayName: Sentry Timeout
  description: Timeout for all Sentry operations
  value: "5s"

- name: SUPPORTED_CLOUD_PROVIDERS
  displayName: Supported Cloud Providers
  description: A list of supported cloud providers in a yaml format.
  value: "[{name: aws, default: true, regions: [{name: us-east-1, default: true, supported_instance_type: {standard: {}, eval: {}}}]}]"

- name: ENABLE_CENTRAL_EXTERNAL_CERTIFICATE
  displayName: Enable Central TLS
  description: Enable the Central TLS certificate
  value: "true"

- name: OBSERVATORIUM_RHSSO_GATEWAY
  displayName: Observatorium Red Hat SSO gateway
  description: A URL to an Observatorium instance where observability metrics will sent to.
  value: ""

- name: OBSERVATORIUM_RHSSO_REALM
  displayName: Observatorium Red Hat SSO realm
  description: Observatorium Red Hat SSO realm for observability stack.
  value: ""

- name: OBSERVATORIUM_RHSSO_TENANT
  displayName: Observatorium Red Hat SSO tenant
  description: Observatorium Red Hat SSO tenant for observability stack.
  value: ""

- name: OBSERVATORIUM_RHSSO_AUTH_SERVER_URL
  displayName: Observatorium Red Hat SSO auth server URL
  description: Observatorium Red Hat SSO auth server URL for observability stack.
  value: ""

- name: OBSERVATORIUM_TOKEN_REFRESHER_URL
  displayName: Observatorium Red Hat SSO token refresher URL
  description: Observatorium Red Hat SSO token refresher URL for observability stack.
  value: ""

- name: ENABLE_OBSERVATORIUM_DEBUG
  displayName: Enable Observatorium Debug Logging
  value: "false"

- name: OBSERVATORIUM_TIMEOUT
  displayName: observatorium Request Timeout (seconds)
  description: Timeout duration for all requests made to Observatorium
  value: "120s"

- name: OBSERVATORIUM_INSECURE
  displayName: Observatorium ssl mode (disable)
  value: "true"

- name: ENABLE_TERMS_ACCEPTANCE
  displayName: Enable terms acceptance
  description: If enabled, centrals can't be created unless required terms are accepted
  value: "false"

- name: ENABLE_DENY_LIST
  displayName: Enable the Deny List
  description: Enable the denied list access control feature
  value: "false"

- name: ENABLE_INSTANCE_LIMIT_CONTROL
  displayName: Enable instance limit control
  description: Enable to enforce limits on how much instances a user can create.
  value: "true"

- name: MAX_ALLOWED_INSTANCES
  displayName: Maximum allowed instances
  description: The default value of maximum number of instances that can be created by users.
  value: "1"

- name: MAX_LIMIT_FOR_SSO_GET_CLIENTS
  displayName: Max clients fetch by get clients
  description: The default value of maximum number of clients fetch from sso.
  value: "100"

- name: REGISTERED_SERVICE_ACCOUNTS
  displayName: A list of service accounts
  description: A list of service accounts that are allowed to create standard CENTRAL instances without requiring an organisation to do so in a yaml format.
  value: "[]"

- name: REGISTERED_USERS_PER_ORGANISATION
  displayName: A list of users per organisation
  description: A list of users that are allowed to create standard CENTRAL instances via their organisation in a yaml format.
  value: "[{id: 13640203, max_allowed_instances: 5, any_user: true, registered_users: []}, {id: 12147054, max_allowed_instances: 1, any_user: true, registered_users: []}, {id: 13639843, max_allowed_instances: 1, any_user: true, registered_users: []}]"

- name: DENIED_USERS
  displayName: A list of denied users given by their usernames
  description: A list of denied users that are not allowed to access the service. A user is identified by its username.
  value: "[]"

- name: READ_ONLY_USERS
  displayName: A list of read only users given by their usernames
  description: A list of read only users. A user is identified by its username.
  value: "[]"

- name: SSO_DEBUG
  displayName: SSO API Debug mode
  description: Debug mode for SSO API client
  value: "false"

- name: SSO_BASE_URL
  displayName: SSO Host Url
  description: SSO Host url

- name: SSO_REALM
  displayName: SSO REALM for Central SSO Clients and Service Accounts
  description: SSO realm for Central SSO Clients and Service Accounts

- name: CLUSTER_OPENSHIFT_VERSION
  displayName: The version of openshift
  description: The version of openshift to be deployed on a new created OSD cluster
  value: ""

- name: CLUSTER_COMPUTE_MACHINE_TYPE
  displayName: Compute machine type
  description: The compute machine type of each node on a new created cluster.
  value: "m5.2xlarge"

- name: ALLOW_EVALUATOR_INSTANCE
  displayName: Allow Evaluator Instance
  description: Allow the creation of one central evaluator instance per user
  value: "true"

- name: QUOTA_TYPE
  displayName: Quota type
  description: Tye type of quota management service to be used. Available options are 'ams' and "quota-management-list"
  value: "quota-management-list"

- name: FLEETSHARD_POLL_INTERVAL
  displayName: fleetshard-operator poll interval
  description: Interval defining how often the synchronizer polls and gets updates from the control plane
  value: "15s"

- name: FLEETSHARD_RESYNC_INTERVAL
  displayName: fleetshard-operator resync interval
  description: Interval defining how often the synchronizer reports back status changes to the control plane
  value: "60s"

- name: OBSERVABILITY_CONFIG_REPO
  displayName: Observability configuration repo URL
  description: URL of the observability configuration repo
  value: "https://api.github.com/repos/bf2fc6cc711aee1a0c2a/observability-resources-mk/contents"

- name: OBSERVABILITY_CONFIG_CHANNEL
  displayName: Observability configuration channel
  description: Channel of the observability configuration
  value: "resources"

- name: OBSERVABILITY_CONFIG_TAG
  displayName: Observability configuration tag
  description: Tag or branch to use inside the configuration repo
  value: "main"

- name: SERVICE_PUBLIC_HOST_URL
  displayName: The public HTTP host URL of the service
  description: The public HTTP host URL of the service
  value: "https://api.openshift.com"

- name: CENTRAL_LIFE_SPAN
  displayName: Central life span expiration in hours
  description: Time period in hours after which central instances are deleted. This value must be a positive value
  value: "48"

- name: ENABLE_CENTRAL_LIFE_SPAN
  displayName: Enables Central life span for expiration in hours
  description: Enables the ability to set a Central life span for expiration in hours
  value: "false"

- name: DATAPLANE_CLUSTER_SCALING_TYPE
  displayName: Data Plane Cluster Scaling Type
  description: Data Plane Cluster Scaling type (manual/auto/none). If set to none, scaling is disabled.
  value: "manual"

- name: CLUSTER_LIST
  displayName: A list of cluster to be registered in fleet manager
  description: A list of cluster to be registered in fleet manager
  value: "[]"

- name: ENVOY_IMAGE
  description: Envoy image
  value: envoyproxy/envoy:v1.16.1

- name: CENTRAL_DOMAIN_NAME
  description: The domain name to use for Central instances
  value: acs-stage.rhcloud.com

- name: CENTRAL_OPERATOR_OPERATOR_ADDON_ID
  displayName: Central operator addon ID
  description: ID of the Central operator addon
  value: "managed-central-qe"

- name: FLEETSHARD_ADDON_ID
  displayName: fleetshard addon ID
  description: ID of the fleetshard addon
  value: "fleetshard-operator-qe"

- name: ENABLE_READY_DATA_PLANE_CLUSTERS_RECONCILE
  description: Enables reconciliation for data plane clusters in the 'Ready' state
  value: "true"

- name: CENTRAL_OPERATOR_OLM_INDEX_IMAGE
  displayName: Central operator OLM index image
  description: Central operator OLM index image
  value: "quay.io/osd-addons/managed-central:production-82b42db"

- name: FLEETSHARD_OLM_INDEX_IMAGE
  displayName: fleetshard operator OLM index image
  description: fleetshard operator OLM index image
  value: "quay.io/osd-addons/fleetshard-operator:production-82b42db"

- name: IMAGE_PULL_POLICY
  displayName: image pull policy
  description: image pull policy
  value: "IfNotPresent"

- name: TOKEN_ISSUER_URL
  displayName: A token issuer url
  description: A token issuer url used to validate if JWT token used are coming from the given issuer
  value: "https://sso.redhat.com/auth/realms/redhat-external"

- name: DATAPLANE_CLUSTER_CONFIG_FILE
  displayName: This file contains properties for manually configuring OSD cluster
  description: This file contains properties for manually configuring OSD cluster, and it's passed to the fleet manager executable in the flag --dataplane-cluster-config-file
  value: /config/dataplane-cluster-configuration.yaml

- name: PROVIDERS_CONFIG_FILE
  displayName: SupportedProviders configuration file
  description: SupportedProviders configuration file, that it's passed to the fleet manager executable in the flag --providers-config-file
  value: /config/provider-configuration.yaml

- name: CENTRAL_REQUEST_EXPIRATION_TIMEOUT
  displayName: Central request expiration timeout
  description: Maximum interval after which central request is canceled
  value: "1h"

- name: TELEMETRY_ENDPONT
  displayName: Telemetry endpoint
  description: Endpoint for the telemetry backend
  value: ""

- name: CENTRAL_REQUEST_INTERNAL_USER_AGENTS
  displayName: Central request internal user agents
  description: List of user agents from internal clients
  value: "fleet-manager-probe-service"

- name: RHACS_GITOPS_ENABLED
  displayName: RHACS Gitops enabled
  description: Whether to enable configuration of Centrals through gitops be enabled
  value: "false"

- name: RHACS_TARGETED_OPERATOR_UPGRADES
  displayName: RHACS Targeted Operator Upgrades
  description: Whether to enable targeted operator upgrades
  value: "false"

objects:
  - kind: ConfigMap
    apiVersion: v1
    metadata:
      name: fleet-manager-providers-config
      annotations:
        qontract.recycle: "true"
    data:
      provider-configuration.yaml: |-
        supported_providers: ${SUPPORTED_CLOUD_PROVIDERS}
  - kind: ConfigMap
    apiVersion: v1
    metadata:
      name: fleet-manager-allowed-users-config
      annotations:
        qontract.recycle: "true"
    data:
      quota-management-list-configuration.yaml: |-
        registered_service_accounts: ${REGISTERED_SERVICE_ACCOUNTS}
        registered_users_per_organisation: ${REGISTERED_USERS_PER_ORGANISATION}
  - kind: ConfigMap
    apiVersion: v1
    metadata:
      name: fleet-manager-denied-users-config
      annotations:
        qontract.recycle: "true"
    data:
      deny-list-configuration.yaml: |-
        ${DENIED_USERS}
  - kind: ConfigMap
    apiVersion: v1
    metadata:
      name: fleet-manager-additional-sso-issuers-config
      annotations:
        qontract.recycle: "true"
    data:
      additional-sso-issuers.yaml: |-
        - https://sso.stage.redhat.com/auth/realms/redhat-external
  - kind: ConfigMap
    apiVersion: v1
    metadata:
      name: fleet-manager-admin-authz-config
      annotations:
        qontract.recycle: "true"
    data:
      admin-authz-roles-dev.yaml: |-
        - method: GET
          roles:
            - "acs-general-engineering"
            - "acs-fleet-manager-admin-full"
            - "acs-fleet-manager-admin-read"
            - "acs-fleet-manager-admin-write"
        - method: PATCH
          roles:
            - "acs-general-engineering"
            - "acs-fleet-manager-admin-full"
            - "acs-fleet-manager-admin-write"
        - method: DELETE
          roles:
            - "acs-general-engineering"
            - "acs-fleet-manager-admin-full"
        - method: POST
          roles:
            - "acs-general-engineering"
            - "acs-fleet-manager-admin-full"
      admin-authz-roles-prod.yaml: |-
        - method: GET
          roles:
            - "acs-fleet-manager-admin-full"
            - "acs-fleet-manager-admin-read"
            - "acs-fleet-manager-admin-write"
        - method: PATCH
          roles:
            - "acs-fleet-manager-admin-full"
            - "acs-fleet-manager-admin-write"
        - method: DELETE
          roles:
            - "acs-fleet-manager-admin-full"
        - method: POST
          roles:
            - "acs-fleet-manager-admin-full"
  - kind: ConfigMap
    apiVersion: v1
    metadata:
      name: fleet-manager-read-only-user-list
      annotations:
        qontract.recycle: "true"
    data:
      read-only-user-list.yaml: |-
        ${READ_ONLY_USERS}
  - kind: ConfigMap
    apiVersion: v1
    metadata:
      name: fleet-manager-authentication
      annotations:
        qontract.recycle: "true"
    data:
      jwks-file.json: |-
        {
          "keys": [
            {
              "kid": "-4elc_VdN_WsOUYf2G4Qxr8GcwIx_KtXUCitatLKlLw",
              "kty": "RSA",
              "alg": "RS256",
              "use": "sig",
              "n": "5MvhbE1Mxr2FUYGZiH0z6p-kV-FIUHp4ErxkD6S8Sc5OB7IjRKDSsJzmuwR803cKpeKoIkkUTiznYwCBqAUdP3bIZ8k97X6GX19dOSqL4ej1rjYZYAf9_Jt_Z-0PzIjX50z6TpqeGoh7-6P-634SvbdjatnhTAQ3qsBXfPOHPIPRAZkGfmlM1EdvIlm_d2hQ7nDSETbVC4YHY-iESvUhre-aNmqJU_E6fRnGwFTPS20fPLE5bUNbshvTXn5c-bxtWK9bSCHCRVYUF9QWwDoFX9gGOIpSScHAKQLRR16yOQjOioZ2FeVZnDpWNvZelbQ7LtLN0H5uCJsqDoZDDhDWeFp-25O9ih5M9auT_2IepUlOq3OBMj7i3CJXrvjNQiuGkPHp9xN6kd5H4E5hcqUTmfYdgf1IuXP0cTwYtQor21dWBSpFvxW8l1HGLOaO_rSetNRJ-tZ7FKUK5L6crt1N72AGIay96gNOWNe4POOG_ML1r4h3SKBFdMPwJ-R5KDg7-oRcUT4kLuFtWuQG7bKLJhIxw_SnVFajLGt1d3-OCqX6ozuUbdEW31f9iLZd4w-NUSSHjxP1Uvalk5QfUro9w9fTW73jRIUASnbHunopjt_IkiQswrdIwpfpeBokcf9O757_i0kctQ5M1gyPf4-0yPfuDVkeBAHygoxNJU9H3C0",
              "e": "AQAB"
            },
            {
              "kid": "v5MpUEnwk1VYIqifv9G9xmIB2ZLzPttk-0PaEURQQ3I",
              "kty": "RSA",
              "alg": "RS256",
              "use": "sig",
              "n": "uYp35gi5YzQeNN5aQOPwLranSJT9aJB-w6Ih4Wn9R6FzEg1OEKwBNNpb-z18reAyhxQMy_bCz3q-J7viX6p5hbclPBakKOjPB4lDzwhvfE1G4vp84zH1bR7m8dd4OXbriojVZ51IPNuItO00nrDrx6PWNP_5ufBUwjJo8-BD-sWm7BP_CVlb8miVh8itpcLJrszpHzF-u0OPqwI_e3P83cYOsXoQRxD4wpo718yqYh4J3NNJQYnyprJMpC3w3QQ5PR28TbBfSHgvtWD1SBuavHh2jwT_6Pi8FqOS1vfX7QA1pxyYZ-zazVxj_zOrCeP3FHyaxTPmn0d5zsXBZCCyhsfCaStnFePTPk-KEGwZAlv43JJjV2rTJc1Lsj1Th7Jq63TvwIGBcFFAtC72N5-jwRjUoeyu_nwO_1r1awvbfrlBF31PG5wxUdVR56PesLO7EVH1_2KrVN7dtgaQkomVk6rULBbCbwhfR1oT3cOxF7d0ajpbzHd2qcfeBzFTABL8dzBp4FcZx5QyYSIOP8fuwSO8zy4rxmBw7HpHGOGFrC3cXWqB33M23IjOpVZbfK46QvJhcGq9QEtOlRO2WVemMcwDSgpceAa7e3ZJx-LO6XyTEjRtTuHMwdLxII3YUlL1hPozrNE1U_ADPGHgnTxGswgBpGOA6rOkWav5uhcj9Cs",
              "e": "AQAB"
            },
            {
              "kid": "RIENZmfJ6O4rpkmnswmxgMUznjq3rRuUbz5r9eFiq3E",
              "kty": "RSA",
              "alg": "RS512",
              "use": "sig",
              "n": "0BpyPqFrZHF2xluG8wSjUMr_ouktSJiSq3VcOn6xH04rG8wLX-v3JfhXRjtJl3XpSJU7j5GMJzz3Cq3dbgBCpb49gVQkBE7s4NVlN4gLhonn7VekXF6YZlI152ROFxoKWda157BIj3m--JYVKIiVg21WujAOA5WVjy17t3fC_7HDgPMVO6MSo7aCbzOc1NEDJ0-5NBNtqZBBlu240gyhW8FNgIdgna-_QWKsQOUKTDlvOFwEt0IDXd29KU0FOIGRPiKsQ--1eIBg3OLMxlni-DhWBAyVpf5_kP0P8udSqXfWba6i6YmnNAAdaVYV5_EGYCxPhwdwTndNtDErCw1oaw",
              "e": "AQAB"
            },
            {
              "kid": "E3DKGdZQ7xTiIvfdFgVXLNupVupFBlcxNUgVCFhDwEg",
              "kty": "RSA",
              "alg": "RS512",
              "use": "sig",
              "n": "ta1xAjqdqnH_RlDI1rFtiGWYgnxpzqGflSQXzuiKR1QaipHTeGeLDUTcG1O6nlb9YgEVcJKSP8JQ36QNfXCPKlNcsqUqr81jiL_kSNAD3xHX4Z8ymuA-FW24bLeNwRkdGKGy3aY4giJxXnqB63ArtjmmWaGYEQEriUz16wW0w3H_QJyje3__j_Sh1ya_V7Ct3A6ajTipp-OzAuIgsqXbZz2b8ejr3My5PiXz9t41xKx_u4Mm18BQ4SQ2OvTfA0Of0mZ3Q-FVy2q1WIKwPmCMDyV5bigmvRYblRDCbTvKIGHyEjs1zuAxJqzFJkGpAHpnKfbUdSfO-JWK6fB4V3bPzw",
              "e": "AQAB"
            }
          ]
        }
      jwks-file-static.json: |
        {
          "keys": [
            {
              "kid": "-4elc_VdN_WsOUYf2G4Qxr8GcwIx_KtXUCitatLKlLw",
              "kty": "RSA",
              "alg": "RS256",
              "use": "sig",
              "n": "5MvhbE1Mxr2FUYGZiH0z6p-kV-FIUHp4ErxkD6S8Sc5OB7IjRKDSsJzmuwR803cKpeKoIkkUTiznYwCBqAUdP3bIZ8k97X6GX19dOSqL4ej1rjYZYAf9_Jt_Z-0PzIjX50z6TpqeGoh7-6P-634SvbdjatnhTAQ3qsBXfPOHPIPRAZkGfmlM1EdvIlm_d2hQ7nDSETbVC4YHY-iESvUhre-aNmqJU_E6fRnGwFTPS20fPLE5bUNbshvTXn5c-bxtWK9bSCHCRVYUF9QWwDoFX9gGOIpSScHAKQLRR16yOQjOioZ2FeVZnDpWNvZelbQ7LtLN0H5uCJsqDoZDDhDWeFp-25O9ih5M9auT_2IepUlOq3OBMj7i3CJXrvjNQiuGkPHp9xN6kd5H4E5hcqUTmfYdgf1IuXP0cTwYtQor21dWBSpFvxW8l1HGLOaO_rSetNRJ-tZ7FKUK5L6crt1N72AGIay96gNOWNe4POOG_ML1r4h3SKBFdMPwJ-R5KDg7-oRcUT4kLuFtWuQG7bKLJhIxw_SnVFajLGt1d3-OCqX6ozuUbdEW31f9iLZd4w-NUSSHjxP1Uvalk5QfUro9w9fTW73jRIUASnbHunopjt_IkiQswrdIwpfpeBokcf9O757_i0kctQ5M1gyPf4-0yPfuDVkeBAHygoxNJU9H3C0",
              "e": "AQAB"
            },
            {
              "kid": "v5MpUEnwk1VYIqifv9G9xmIB2ZLzPttk-0PaEURQQ3I",
              "kty": "RSA",
              "alg": "RS256",
              "use": "sig",
              "n": "uYp35gi5YzQeNN5aQOPwLranSJT9aJB-w6Ih4Wn9R6FzEg1OEKwBNNpb-z18reAyhxQMy_bCz3q-J7viX6p5hbclPBakKOjPB4lDzwhvfE1G4vp84zH1bR7m8dd4OXbriojVZ51IPNuItO00nrDrx6PWNP_5ufBUwjJo8-BD-sWm7BP_CVlb8miVh8itpcLJrszpHzF-u0OPqwI_e3P83cYOsXoQRxD4wpo718yqYh4J3NNJQYnyprJMpC3w3QQ5PR28TbBfSHgvtWD1SBuavHh2jwT_6Pi8FqOS1vfX7QA1pxyYZ-zazVxj_zOrCeP3FHyaxTPmn0d5zsXBZCCyhsfCaStnFePTPk-KEGwZAlv43JJjV2rTJc1Lsj1Th7Jq63TvwIGBcFFAtC72N5-jwRjUoeyu_nwO_1r1awvbfrlBF31PG5wxUdVR56PesLO7EVH1_2KrVN7dtgaQkomVk6rULBbCbwhfR1oT3cOxF7d0ajpbzHd2qcfeBzFTABL8dzBp4FcZx5QyYSIOP8fuwSO8zy4rxmBw7HpHGOGFrC3cXWqB33M23IjOpVZbfK46QvJhcGq9QEtOlRO2WVemMcwDSgpceAa7e3ZJx-LO6XyTEjRtTuHMwdLxII3YUlL1hPozrNE1U_ADPGHgnTxGswgBpGOA6rOkWav5uhcj9Cs",
              "e": "AQAB"
            },
            {
              "kid": "RIENZmfJ6O4rpkmnswmxgMUznjq3rRuUbz5r9eFiq3E",
              "kty": "RSA",
              "alg": "RS512",
              "use": "sig",
              "n": "0BpyPqFrZHF2xluG8wSjUMr_ouktSJiSq3VcOn6xH04rG8wLX-v3JfhXRjtJl3XpSJU7j5GMJzz3Cq3dbgBCpb49gVQkBE7s4NVlN4gLhonn7VekXF6YZlI152ROFxoKWda157BIj3m--JYVKIiVg21WujAOA5WVjy17t3fC_7HDgPMVO6MSo7aCbzOc1NEDJ0-5NBNtqZBBlu240gyhW8FNgIdgna-_QWKsQOUKTDlvOFwEt0IDXd29KU0FOIGRPiKsQ--1eIBg3OLMxlni-DhWBAyVpf5_kP0P8udSqXfWba6i6YmnNAAdaVYV5_EGYCxPhwdwTndNtDErCw1oaw",
              "e": "AQAB"
            },
            {
              "kid": "E3DKGdZQ7xTiIvfdFgVXLNupVupFBlcxNUgVCFhDwEg",
              "kty": "RSA",
              "alg": "RS512",
              "use": "sig",
              "n": "ta1xAjqdqnH_RlDI1rFtiGWYgnxpzqGflSQXzuiKR1QaipHTeGeLDUTcG1O6nlb9YgEVcJKSP8JQ36QNfXCPKlNcsqUqr81jiL_kSNAD3xHX4Z8ymuA-FW24bLeNwRkdGKGy3aY4giJxXnqB63ArtjmmWaGYEQEriUz16wW0w3H_QJyje3__j_Sh1ya_V7Ct3A6ajTipp-OzAuIgsqXbZz2b8ejr3My5PiXz9t41xKx_u4Mm18BQ4SQ2OvTfA0Of0mZ3Q-FVy2q1WIKwPmCMDyV5bigmvRYblRDCbTvKIGHyEjs1zuAxJqzFJkGpAHpnKfbUdSfO-JWK6fB4V3bPzw",
              "e": "AQAB"
            },
            {
              "kty": "RSA",
              "e": "AQAB",
              "use": "sig",
              "kid": "acs-dev-bitwarden-static-token-jwks",
              "alg": "RS256",
              "n": "s6bi3xECYj1V_QksbRme4wRMm9X8NoCPqqYRqn3PGTYSpNpTsvOohSd2b3gtbtR_89N1YXFYbjMmk-dqaaZNGCVfg45KuCjaore62yiExAzMA8N-gw6IiBXe6TUN6kZP84OLDhfDZXmrpL1tOepWY1mSAN3IT_lmDFqU06MS7AXOTz7qWXOp6s_-Bwbl3GmP6OhAdc955-WAizTxiWdKWGZ0aXlhP167GE45IRjVarB_TIemDYfN1PBfznfgW7F4JZvwzC--oiH2mps8xaDvby7Y0W-LHFL_64lXgTs1OW9vcIisSH-1YsiVIraQDbiVtNTjzDrF7ouNKSL5uTQ2pQ"
            }
          ]
        }

  - kind: ConfigMap
    apiVersion: v1
    metadata:
      name: fleet-manager-dataplane-cluster-scaling-config
      annotations:
        qontract.recycle: "true"
    data:
      dataplane-cluster-configuration.yaml: |-
        clusters: ${CLUSTER_LIST}
  - kind: ConfigMap
    apiVersion: v1
    metadata:
      name: fleet-manager-fleetshard-authz-config
      annotations:
        qontract.recycle: "true"
    data:
      fleetshard-authz-org-ids-development.yaml: |-
        # RH ACS Organization (returned for personal tokens obtained by ocm token).
        - "11009103"
        # RHACS Managed Service Org for staging (Entry `RHACS Managed Service Org for AWS Billing` in Bitwarden).
        - "16064548"
        # ACS RH SSO Org Prod
        - "16134752"
        # ACS RH SSO ORG Development
        - "16155304"
      fleetshard-authz-org-ids-prod.yaml: |-
        # ACS RH SSO Org Prod
        - "16134752"
  - kind: ServiceAccount
    apiVersion: v1
    metadata:
      name: fleet-manager
      labels:
        app: fleet-manager
    imagePullSecrets:
    - name: quay.io

  - kind: Role
    apiVersion: rbac.authorization.k8s.io/v1
    metadata:
      name: fleet-manager
      labels:
        app: fleet-manager
    rules:
        # Allow fleet-manager to update its pod labels
        # so that it can set/unset the fleet-manager-active label
      - apiGroups:
          - ""
        resources:
          - pods
        verbs:
          - get
          - list
          - watch
          - update
          - patch
      - apiGroups:
          - ""
        resources:
          - configmaps
        verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
      - apiGroups:
          - coordination.k8s.io
        resources:
          - leases
        verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete

  - kind: RoleBinding
    apiVersion: rbac.authorization.k8s.io/v1
    metadata:
      name: fleet-manager
      labels:
        app: fleet-manager
    subjects:
      - kind: ServiceAccount
        name: fleet-manager
        namespace: ${NAMESPACE}
    roleRef:
      kind: Role
      name: fleet-manager
      apiGroup: rbac.authorization.k8s.io

  - apiVersion: v1
    kind: ConfigMap
    metadata:
      name: fake-fleet-manager-secret
    data:
      central.idp-client-secret: badger
      ocm-service.clientId: badger
      ocm-service.clientSecret: badger
      ocm-service.token: badger
      sentry.key: badger
      aws.accesskey: badger
      aws.accountid: badger
      aws.secretaccesskey: badger
      redhatsso-service.clientId: badger
      redhatsso-service.clientSecret: badger
      aws.route53accesskey: badger
      aws.route53secretaccesskey: badger
      observability-config-access.token: badger
  - apiVersion: v1
    kind: ConfigMap
    metadata:
      name: fake-fleet-manager-observatorium-secret
    data:
      logs.clientId: badger
      logs.clientSecret: badger
      metrics.clientId: badger
      metrics.clientSecret: badger
  - apiVersion: v1
    kind: ConfigMap
    metadata:
      name: fleet-manager-dataplane-cluster-configuration-staging
      annotations:
        qontract.recycle: "true"
    data:
      dataplane-cluster-configuration-staging.yaml: |-
        clusters: ${CLUSTER_LIST}

  # This is a copy of the configmap from envoy-config-configmap.yml but only containing the parts
  # which are strictly necessary to get readiness/liveness probes to pass.
  # TODO(porridge): consider folding this back into app-interface/data/services/acs-fleet-manager/stage/fleet-manager-envoy.configmap.yaml
  - apiVersion: v1
    kind: ConfigMap
    metadata:
      name: fleet-manager-envoy-config-cd
      annotations:
        qontract.recycle: "true"
    data:
      main.yaml: |
        # The administration endpoint uses a Unix socket instead of TCP in order
        # to avoid exposing it outside of the pod. Requests for metrics and
        # probes will go via an HTTP listener that only accepts requests for the
        # /metrics and /ready paths.
        admin:
          access_log_path: /dev/null
          address:
            pipe:
              path: /sockets/admin.socket

        static_resources:

          clusters:

          # This backend is used to send metrics and probes requests to the
          # administration endpoint.
          - name: admin
            connect_timeout: 1s
            type: STATIC
            lb_policy: ROUND_ROBIN
            load_assignment:
              cluster_name: admin
              endpoints:
                - lb_endpoints:
                    - endpoint:
                        address:
                          pipe:
                            path: /sockets/admin.socket

          # This cluster is used to send requests to the backend. Note that
          # currently it uses TLS, but that doesn't make much sense in this
          # context because this communication is completely iside the pod. We
          # should change this to use plain TCP and maybe even Unix sockets.
          - name: backend
            connect_timeout: 1s
            type: STATIC
            lb_policy: ROUND_ROBIN
            load_assignment:
              cluster_name: backend
              endpoints:
              - lb_endpoints:
                - endpoint:
                    address:
                      socket_address:
                        address: 127.0.0.1
                        port_value: 8000 # Fleet Manager port
            transport_socket:
              name: envoy.transport_sockets.tls
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
                common_tls_context:
                  validation_context:
                    trusted_ca:
                      filename: /var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt

          # TODO(ROX-11395): enable rate limiting post-MVP
          # # This cluster is used to send request to the rate limiting service.
          # - name: limiter
          #   connect_timeout: 1s
          #   type: STRICT_DNS
          #   lb_policy: ROUND_ROBIN
          #   http2_protocol_options: {}
          #   load_assignment:
          #     cluster_name: limiter
          #     endpoints:
          #     - lb_endpoints:
          #       - endpoint:
          #           address:
          #             socket_address:
          #               address: limitador.app-sre-rate-limiting.svc
          #               port_value: 8081

          listeners:

          # This listener is used to accept /metrics and /ready requests.
          # Everything else will be rejected.
          - name: admin
            address:
              socket_address:
                address: 0.0.0.0
                port_value: 9000
            filter_chains:
              - filters:
                  - name: envoy.filters.network.http_connection_manager
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                      stat_prefix: admin
                      route_config:
                        name: admin
                        virtual_hosts:
                          - name: admin
                            domains:
                              - "*"
                            routes:
                              - name: ready
                                match:
                                  path: /ready
                                route:
                                  cluster: admin
                              - name: metrics
                                match:
                                  path: /metrics
                                route:
                                  cluster: admin
                                  prefix_rewrite: /stats/prometheus
                      http_filters:
                        - name: envoy.filters.http.router

          # This listener is used to accept inbound API requests.
          - name: ingress
            address:
              socket_address:
                address: 0.0.0.0
                port_value: 9001
            filter_chains:
            - transport_socket:
                name: envoy.transport_sockets.tls
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
                  common_tls_context:
                    tls_certificates:
                    - certificate_chain:
                        filename: /secrets/tls/tls.crt
                      private_key:
                        filename: /secrets/tls/tls.key
              filters:
              - name: envoy.filters.network.http_connection_manager
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                  access_log:
                  - name: envoy.access_loggers.file
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                      path: /dev/stdout
                  stat_prefix: ingress
                  route_config:
                    name: backend
                    virtual_hosts:
                    - name: all
                      domains:
                      - "*"
                      routes:

                      # TODO(ROX-11395): enable rate limiting post-MVP
                      # # Route fleet-manager's agent-cluster related endpoints
                      # # directly to the service without rate limiting
                      # - name: fleet-shard-operator-agent-cluster-routes
                      #   match:
                      #     prefix: /api/rhacs/v1/agent-clusters
                      #   route:
                      #     cluster: backend
                      #
                      # # Apply rate limit to all other fleet-manager endpoints
                      # - name: fleet-manager-v1-routes
                      #   match:
                      #     prefix: /api/rhacs/v1
                      #   route:
                      #     cluster: backend
                      #     rate_limits:
                      #     - actions:
                      #       - generic_key:
                      #           descriptor_key: path
                      #           descriptor_value: fleet_manager_v1
                      #
                      # # This is an example of how to define a rate limit for a
                      # # specific path.
                      # # - name: my_path
                      # #   match:
                      # #     path: /my_path
                      # #   route:
                      # #     cluster: backend
                      # #     rate_limits:
                      # #     - actions:
                      # #       - generic_key:
                      # #           descriptor_key: example_descriptor_key
                      # #           descriptor_value: example_descriptor_value
                      #
                      # # Everything else not matching one of the rules above goes
                      # # directly to the backend, without rate limits.

                      - name: default
                        match:
                          prefix: /
                        route:
                          cluster: backend

                  http_filters:

                  # TODO(ROX-11395): enable rate limiting post-MVP
                  # # This is needed to enable the rate limiter:
                  # - name: envoy.filters.http.ratelimit
                  #   typed_config:
                  #     "@type": type.googleapis.com/envoy.extensions.filters.http.ratelimit.v3.RateLimit
                  #     domain: development:fleet_manager # This changes by environment
                  #     failure_mode_deny: false
                  #     timeout: 0.05s
                  #     rate_limit_service:
                  #       grpc_service:
                  #         envoy_grpc:
                  #           cluster_name: limiter
                  #       transport_api_version: V3

                  # TODO(ROX-18694): upgrade envoy version and change implementation for headers response to LuaPerRoute
                  # This allows Lua scripts to be run during response flow
                  - name: lua_security_headers
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua
                      inline_code: |
                        function envoy_on_response(response_handle)
                          csp = "default-src 'none'; script-src 'self'; img-src 'self'; style-src 'self'; connect-src 'self'";
                          response_handle:headers():add("Content-Security-Policy", csp);
                          response_handle:headers():add("X-Frame-Options", "deny");
                          response_handle:headers():add("X-XSS-Protection", "1; mode=block");
                          response_handle:headers():add("X-Content-Type-Options", "nosniff");
                          response_handle:headers():add("Referrer-Policy", "no-referrer");
                          response_handle:headers():add("X-Download-Options", "noopen");
                          response_handle:headers():add("X-DNS-Prefetch-Control", "off");
                          response_handle:headers():add("Strict-Transport-Security", "max-age=31536000; includeSubDomains");
                        end
                  # This is mandatory in order to have the HTTP routes above.
                  - name: envoy.filters.http.router

                  # TODO(ROX-11395): enable rate limiting post-MVP
                  # # We need this in order to generate JSON responses according to
                  # # our API guidelines, otherwise Envoy will generate plain text
                  # # responses.
                  # local_reply_config:
                  #   mappers:
                  #   - filter:
                  #       status_code_filter:
                  #         comparison:
                  #           op: EQ
                  #           value:
                  #             default_value: 429
                  #             runtime_key: none
                  #     body_format_override:
                  #       json_format:
                  #         kind: "Error"
                  #         id: "429"
                  #         href: "/api/rhacs/v1/errors/429"
                  #         code: "CENTRALS-MGMT-429"
                  #         reason: "Too Many Requests"

  - kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: fleet-manager
      labels:
        app: fleet-manager
    spec:
      selector:
        matchLabels:
          app: fleet-manager
      replicas: ${{REPLICAS}}
      strategy:
        rollingUpdate:
          maxSurge: 25%
          maxUnavailable: 25%
        type: RollingUpdate
      template:
        metadata:
          labels:
            app: fleet-manager
        spec:
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
              - podAffinityTerm:
                  labelSelector:
                    matchExpressions:
                    - key: app
                      operator: In
                      values:
                      - fleet-manager
                  topologyKey: "kubernetes.io/hostname"
                weight: 100
          serviceAccount: fleet-manager
          serviceAccountName: fleet-manager
          volumes:
          - name: fleet-manager-credentials
            secret:
              # secretName is a vault-secret provider name in the app-interface
              secretName: fleet-manager-credentials # pragma: allowlist secret
          - name: tls
            secret:
              secretName: fleet-manager-tls # pragma: allowlist secret
          - name: service
            configMap:
              name: fake-fleet-manager-secret
          - name: dataplane-certificate
            secret:
              # secretName is a vault-secret provider name in the app-interface
              secretName: fleet-manager-dataplane-certificate # pragma: allowlist secret
          - name: rds
            secret:
              secretName: ${DATABASE_SECRET_NAME}
          - name: fleet-manager-providers-config
            configMap:
              name: fleet-manager-providers-config
          - name: fleet-manager-allowed-users-config
            configMap:
              name: fleet-manager-allowed-users-config
          - name: fleet-manager-denied-users-config
            configMap:
              name: fleet-manager-denied-users-config
          - name: fleet-manager-additional-sso-issuers-config
            configMap:
              name: fleet-manager-additional-sso-issuers-config
          - name: fleet-manager-read-only-user-list
            configMap:
              name: fleet-manager-read-only-user-list
          - name: fleet-manager-authentication
            configMap:
              name: fleet-manager-authentication
          - name: fleet-manager-dataplane-cluster-scaling-config
            configMap:
              name: fleet-manager-dataplane-cluster-scaling-config
          - name: fleet-manager-fleetshard-authz-config
            configMap:
              name: fleet-manager-fleetshard-authz-config
          - name: fleet-manager-admin-authz-config
            configMap:
              name: fleet-manager-admin-authz-config
          - name: envoy-config
            configMap:
              # Temporarily use a minimum version of the configmap deployed from this file
              # (-cd for Continuous Deployment).
              name: fleet-manager-envoy-config-cd
          - name: envoy-tls
            secret:
              secretName: fleet-manager-envoy-tls # pragma: allowlist secret
          - name: envoy-unix-sockets
            emptyDir:
              medium: Memory
          - name: fleet-manager-observatorium-configuration-red-hat-sso
            configMap:
              name: fake-fleet-manager-observatorium-secret
          - name: fleet-manager-dataplane-cluster-configuration-staging
            configMap:
              name: fleet-manager-dataplane-cluster-configuration-staging
          - name: gitops-config
            configMap:
              name: gitops-config
              optional: true
          initContainers:
          - name: migration
            image: ${IMAGE_REGISTRY}/${IMAGE_REPOSITORY}:${IMAGE_TAG}
            imagePullPolicy: ${IMAGE_PULL_POLICY}
            volumeMounts:
            - name: fleet-manager-credentials
              mountPath: /secrets/fleet-manager-credentials
            - name: service
              mountPath: /secrets/service
            - name: rds
              mountPath: /secrets/rds
            env:
              - name: "OCM_ENV"
                value: "${ENVIRONMENT}"
            command:
            - /usr/local/bin/fleet-manager
            - migrate
            - --db-host-file=/secrets/rds/db.host
            - --db-port-file=/secrets/rds/db.port
            - --db-user-file=/secrets/rds/db.user
            - --db-password-file=/secrets/rds/db.password
            - --db-name-file=/secrets/rds/db.name
            - --db-ssl-certificate-file=/secrets/rds/db.ca_cert
            - --db-sslmode=${DB_SSLMODE}
            - --db-max-open-connections=${DB_MAX_OPEN_CONNS}
            - --ocm-client-id-file=/secrets/fleet-manager-credentials/ocm-service.clientId
            - --ocm-client-secret-file=/secrets/fleet-manager-credentials/ocm-service.clientSecret
            - --ocm-base-url=${OCM_URL}
            - --ams-base-url=${AMS_URL}
            - --ocm-debug=${OCM_DEBUG}
            - --enable-db-debug=${ENABLE_DB_DEBUG}
            - --alsologtostderr
            - -v=${GLOG_V}
          containers:
          - name: service
            image: ${IMAGE_REGISTRY}/${IMAGE_REPOSITORY}:${IMAGE_TAG}
            imagePullPolicy: ${IMAGE_PULL_POLICY}
            volumeMounts:
            - name: fleet-manager-credentials
              mountPath: /secrets/fleet-manager-credentials
            - name: tls
              mountPath: /secrets/tls
            - name: service
              mountPath: /secrets/service
            - name: dataplane-certificate
              mountPath: /secrets/dataplane-certificate
            - name: fleet-manager-observatorium-configuration-red-hat-sso
              mountPath: /secrets/observatorium
            - name: rds
              mountPath: /secrets/rds
            - name: fleet-manager-providers-config
              mountPath: /config/provider-configuration.yaml
              subPath: provider-configuration.yaml
            - name: fleet-manager-allowed-users-config
              mountPath: /config/quota-management-list-configuration.yaml
              subPath: quota-management-list-configuration.yaml
            - name: fleet-manager-denied-users-config
              mountPath: /config/deny-list-configuration.yaml
              subPath: deny-list-configuration.yaml
            - name: fleet-manager-additional-sso-issuers-config
              mountPath: /config/additional-sso-issuers.yaml
              subPath: additional-sso-issuers.yaml
            - name: fleet-manager-read-only-user-list
              mountPath: /config/read-only-user-list.yaml
              subPath: read-only-user-list.yaml
            - name: fleet-manager-authentication
              mountPath: /config/jwks-file.json
              subPath: jwks-file.json
            - name: fleet-manager-authentication
              mountPath: /config/jwks-file-static.json
              subPath: jwks-file-static.json
            - name: fleet-manager-fleetshard-authz-config
              mountPath: /config/fleetshard-authz-org-ids-development.yaml
              subPath: fleetshard-authz-org-ids-development.yaml
            - name: fleet-manager-fleetshard-authz-config
              mountPath: /config/fleetshard-authz-org-ids-prod.yaml
              subPath: fleetshard-authz-org-ids-prod.yaml
            - name: fleet-manager-admin-authz-config
              mountPath: /config/admin-authz-roles-dev.yaml
              subPath: admin-authz-roles-dev.yaml
            - name: fleet-manager-admin-authz-config
              mountPath: /config/admin-authz-roles-prod.yaml
              subPath: admin-authz-roles-prod.yaml
            - name: fleet-manager-dataplane-cluster-scaling-config
              mountPath: /config/dataplane-cluster-configuration.yaml
              subPath: dataplane-cluster-configuration.yaml
            - name: fleet-manager-dataplane-cluster-configuration-staging
              mountPath: /config/dataplane-cluster-configuration-staging.yaml
              subPath: dataplane-cluster-configuration-staging.yaml
            - name: gitops-config
              mountPath: /gitops-config
            env:
              - name: "OCM_ENV"
                value: "${ENVIRONMENT}"
              - name: RHACS_GITOPS_ENABLED
                value: "${RHACS_GITOPS_ENABLED}"
              - name: RHACS_TARGETED_OPERATOR_UPGRADES
                value: "${RHACS_TARGETED_OPERATOR_UPGRADES}"
              - name: POD_NAME
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.name
              - name: NAMESPACE_NAME
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.namespace
            command:
            - /usr/local/bin/fleet-manager
            - serve
            - --central-tls-cert-file=/secrets/dataplane-certificate/tls.crt
            - --central-tls-key-file=/secrets/dataplane-certificate/tls.key
            - --enable-central-external-certificate=${ENABLE_CENTRAL_EXTERNAL_CERTIFICATE}
            - --providers-config-file=${PROVIDERS_CONFIG_FILE}
            - --quota-management-list-config-file=/config/quota-management-list-configuration.yaml
            - --deny-list-config-file=/config/deny-list-configuration.yaml
            - --read-only-user-list-file=/config/read-only-user-list.yaml
            - --central-lifespan=${CENTRAL_LIFE_SPAN}
            - --enable-deletion-of-expired-central=${ENABLE_CENTRAL_LIFE_SPAN}
            - --aws-access-key-file=/secrets/service/aws.accesskey
            - --aws-account-id-file=/secrets/fleet-manager-credentials/aws.accountid
            - --aws-secret-access-key-file=/secrets/service/aws.secretaccesskey
            - --aws-route53-access-key-file=/secrets/fleet-manager-credentials/aws.route53accesskey
            - --aws-route53-secret-access-key-file=/secrets/fleet-manager-credentials/aws.route53secretaccesskey
            - --central-idp-client-secret-file=/secrets/fleet-manager-credentials/central.idp-client-secret
            - --central-idp-client-id=${CENTRAL_IDP_CLIENT_ID}
            - --observatorium-debug=${ENABLE_OBSERVATORIUM_DEBUG}
            - --observatorium-ignore-ssl=${OBSERVATORIUM_INSECURE}
            - --observatorium-timeout=${OBSERVATORIUM_TIMEOUT}
            - --observability-red-hat-sso-logs-client-id-file=/secrets/observatorium/logs.clientId
            - --observability-red-hat-sso-logs-secret-file=/secrets/observatorium/logs.clientSecret
            - --observability-red-hat-sso-metrics-client-id-file=/secrets/observatorium/metrics.clientId
            - --observability-red-hat-sso-metrics-secret-file=/secrets/observatorium/metrics.clientSecret
            - --observability-red-hat-sso-auth-server-url=${OBSERVATORIUM_RHSSO_AUTH_SERVER_URL}
            - --observability-red-hat-sso-realm=${OBSERVATORIUM_RHSSO_REALM}
            - --observability-red-hat-sso-token-refresher-url=${OBSERVATORIUM_TOKEN_REFRESHER_URL}
            - --observability-red-hat-sso-observatorium-gateway=${OBSERVATORIUM_RHSSO_GATEWAY}
            - --observability-red-hat-sso-tenant=${OBSERVATORIUM_RHSSO_TENANT}
            - --db-host-file=/secrets/rds/db.host
            - --db-port-file=/secrets/rds/db.port
            - --db-user-file=/secrets/rds/db.user
            - --db-ssl-certificate-file=/secrets/rds/db.ca_cert
            - --db-password-file=/secrets/rds/db.password
            - --db-name-file=/secrets/rds/db.name
            - --db-sslmode=${DB_SSLMODE}
            - --db-max-open-connections=${DB_MAX_OPEN_CONNS}
            - --enable-db-debug=${ENABLE_DB_DEBUG}
            - --redhat-sso-client-id-file=/secrets/fleet-manager-credentials/redhatsso-service.clientId
            - --redhat-sso-client-secret-file=/secrets/fleet-manager-credentials/redhatsso-service.clientSecret
            - --central-idp-issuer=${CENTRAL_IDP_ISSUER}
            - --ocm-client-id-file=/secrets/fleet-manager-credentials/ocm-service.clientId
            - --ocm-client-secret-file=/secrets/fleet-manager-credentials/ocm-service.clientSecret
            - --sso-base-url=${SSO_BASE_URL}
            - --max-limit-for-sso-get-clients=${MAX_LIMIT_FOR_SSO_GET_CLIENTS}
            - --sso-debug=${SSO_DEBUG}
            - --self-token-file=/secrets/service/ocm-service.token
            - --ocm-base-url=${OCM_URL}
            - --ams-base-url=${AMS_URL}
            - --ocm-debug=${OCM_DEBUG}
            - --https-cert-file=/secrets/tls/tls.crt
            - --https-key-file=/secrets/tls/tls.key
            - --jwks-url=${JWKS_URL}
            - --token-issuer-url=${TOKEN_ISSUER_URL}
            - --enable-https=${ENABLE_HTTPS}
            - --api-server-bindaddress=${API_SERVER_BINDADDRESS}
            - --metrics-server-bindaddress=${METRICS_SERVER_BINDADDRESS}
            - --health-check-server-bindaddress=${HEALTH_CHECK_SERVER_BINDADDRESS}
            - --enable-health-check-https=${ENABLE_HTTPS}
            - --enable-metrics-https=${ENABLE_METRICS_HTTPS}
            - --enable-ocm-mock=${ENABLE_OCM_MOCK}
            - --enable-ready-dataplane-clusters-reconcile=${ENABLE_READY_DATA_PLANE_CLUSTERS_RECONCILE}
            - --ocm-mock-mode=${OCM_MOCK_MODE}
            - --enable-sentry=${ENABLE_SENTRY}
            - --enable-sentry-debug=${ENABLE_SENTRY_DEBUG}
            - --sentry-url=${SENTRY_URL}
            - --sentry-project=${SENTRY_PROJECT}
            - --sentry-timeout=${SENTRY_TIMEOUT}
            - --sentry-key-file=/secrets/service/sentry.key
            - --enable-terms-acceptance=${ENABLE_TERMS_ACCEPTANCE}
            - --enable-deny-list=${ENABLE_DENY_LIST}
            - --enable-instance-limit-control=${ENABLE_INSTANCE_LIMIT_CONTROL}
            - --max-allowed-instances=${MAX_ALLOWED_INSTANCES}
            - --cluster-openshift-version=${CLUSTER_OPENSHIFT_VERSION}
            - --cluster-compute-machine-type=${CLUSTER_COMPUTE_MACHINE_TYPE}
            - --dataplane-cluster-config-file=${DATAPLANE_CLUSTER_CONFIG_FILE}
            - --fleetshard-poll-interval=${FLEETSHARD_POLL_INTERVAL}
            - --fleetshard-resync-interval=${FLEETSHARD_RESYNC_INTERVAL}
            - --allow-evaluator-instance=${ALLOW_EVALUATOR_INSTANCE}
            - --quota-type=${QUOTA_TYPE}
            - --observability-config-repo=${OBSERVABILITY_CONFIG_REPO}
            - --observability-config-channel=${OBSERVABILITY_CONFIG_CHANNEL}
            - --observability-config-access-token-file=/secrets/service/observability-config-access.token
            - --observability-config-tag=${OBSERVABILITY_CONFIG_TAG}
            - --public-host-url=${SERVICE_PUBLIC_HOST_URL}
            - --central-operator-index-image=${CENTRAL_OPERATOR_OLM_INDEX_IMAGE}
            - --fleetshard-operator-index-image=${FLEETSHARD_OLM_INDEX_IMAGE}
            - --dataplane-cluster-scaling-type=${DATAPLANE_CLUSTER_SCALING_TYPE}
            - --central-domain-name=${CENTRAL_DOMAIN_NAME}
            - --central-operator-addon-id=${CENTRAL_OPERATOR_OPERATOR_ADDON_ID}
            - --fleetshard-addon-id=${FLEETSHARD_ADDON_ID}
            - --alsologtostderr
            - --central-request-expiration-timeout=${CENTRAL_REQUEST_EXPIRATION_TIMEOUT}
            - --central-request-internal-user-agents=${CENTRAL_REQUEST_INTERNAL_USER_AGENTS}
            - --telemetry-endpoint=${TELEMETRY_ENDPONT}
            - --telemetry-storage-key-secret-file=/secrets/fleet-manager-credentials/telemetry.storageKey
            - -v=${GLOG_V}
            resources:
              requests:
                cpu: ${CPU_REQUEST}
                memory: ${MEMORY_REQUEST}
              limits:
                cpu: ${CPU_LIMIT}
                memory: ${MEMORY_LIMIT}
            livenessProbe:
              httpGet:
                path: /healthcheck
                port: 8083
                scheme: HTTPS
                httpHeaders:
                - name: User-Agent
                  value: K8sLivenessProbe
              initialDelaySeconds: 15
              periodSeconds: 5
            readinessProbe:
              httpGet:
                path: /healthcheck/ready
                port: 8083
                scheme: HTTPS
                httpHeaders:
                - name: User-Agent
                  value: K8sLivenessProbe
              initialDelaySeconds: 20
              periodSeconds: 10
          - name: envoy-sidecar
            image: ${ENVOY_IMAGE}
            imagePullPolicy: ${IMAGE_PULL_POLICY}
            command:
            - envoy
            - --config-path
            - /configs/envoy/main.yaml
            ports:
            - name: api-envoy
              protocol: TCP
              containerPort: 9001
            - name: metrics-envoy
              protocol: TCP
              containerPort: 9000
            volumeMounts:
            - name: envoy-tls
              mountPath: /secrets/tls
            - name: envoy-config
              mountPath: /configs/envoy
            - name: envoy-unix-sockets
              mountPath: /sockets
            livenessProbe:
              httpGet:
                path: /ready
                port: 9000
              initialDelaySeconds: 10
              timeoutSeconds: 1
              periodSeconds: 10
              successThreshold: 1
              failureThreshold: 10
            readinessProbe:
              httpGet:
                path: /ready
                port: 9000
              initialDelaySeconds: 10
              timeoutSeconds: 1
              periodSeconds: 10
              successThreshold: 1
              failureThreshold: 10
            resources:
              requests:
                memory: 256Mi
                cpu: 250m
              limits:
                memory: 512Mi
                cpu: 500m

  - kind: PodDisruptionBudget
    apiVersion: policy/v1
    metadata:
      name: fleet-manager-pdb
    spec:
      maxUnavailable: "50%"
      selector:
        matchLabels:
          app: fleet-manager

  - kind: Service
    apiVersion: v1
    metadata:
      name: fleet-manager
      labels:
        app: fleet-manager
        port: api
      annotations:
        description: Exposes and load balances the fleet-manager pods
        service.alpha.openshift.io/serving-cert-secret-name: fleet-manager-tls
    spec:
      selector:
        app: fleet-manager
      ports:
        - port: 8000
          targetPort: 8000
          protocol: TCP

  - apiVersion: v1
    kind: Service
    metadata:
      name: fleet-manager-envoy
      labels:
        app: fleet-manager
        port: api-envoy
      annotations:
        description: Exposes and load balances the fleet-manager pods going through envoy beforehand
        service.alpha.openshift.io/serving-cert-secret-name: fleet-manager-envoy-tls
    spec:
      selector:
        app: fleet-manager
      ports:
      - port: 9001
        targetPort: 9001
        protocol: TCP

  - kind: Service
    apiVersion: v1
    metadata:
      name: fleet-manager-active
      labels:
        app: fleet-manager
        port: api-envoy
      annotations:
        description: Exposes and load balances the fleet-manager pods. Only targets the active fleet-manager pod.
        service.alpha.openshift.io/serving-cert-secret-name: fleet-manager-envoy-tls
    spec:
      selector:
        app: fleet-manager
        fleet-manager-active: "true"
      ports:
        - port: 9001
          targetPort: 9001
          protocol: TCP

  # Services for diagnostic ports (not part of main service because we
  # don't want exposing them externally through same route).
  - kind: Service
    apiVersion: v1
    metadata:
      name: fleet-manager-metrics
      labels:
        app: fleet-manager
        port: metrics
      annotations:
        description: Exposes and load balances the fleet-manager pods metrics endpoint
        service.alpha.openshift.io/serving-cert-secret-name: fleet-manager-metrics-tls
    spec:
      selector:
        app: fleet-manager
      ports:
        - port: 8080
          targetPort: 8080
          name: metrics

  - apiVersion: v1
    kind: Service
    metadata:
      name: fleet-manager-healthcheck
      labels:
        app: fleet-manager
        port: healthcheck
    spec:
      selector:
        app: fleet-manager
      ports:
        - port: 8083
          targetPort: 8083

  - apiVersion: v1
    kind: Service
    metadata:
      name: fleet-manager-envoy-metrics
      labels:
        app: fleet-manager
        port: metrics-envoy
    spec:
      selector:
        app: fleet-manager
      ports:
      - port: 9000
        targetPort: 9000
        name: metrics-envoy
