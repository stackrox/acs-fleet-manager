# This runs tests that check the AWS RDS provisioning / deprovisioning logic
name: AWS RDS integration tests

on:
  push:
    branches:
      - main
      - release
    paths-ignore:
      - '*.md'
      - '*.sh'
      - '.github/*.md'
      - '.github/workflows/openapi_update.yaml'
      - '.github/CODEOWNERS'
      - 'templates/**'
      - '.openapi-generator-ignore'
      - 'openapi/**'
      - 'docs/**'
      - 'pkg/api/openapi/docs/**'
      - 'pkg/api/openapi/.openapi-generator-ignore'

  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    paths-ignore:
      - '*.md'
      - '*.sh'
      - '.github/*.md'
      - '.github/workflows/openapi_update.yaml'
      - '.github/CODEOWNERS'
      - 'templates/**'
      - '.openapi-generator-ignore'
      - 'openapi/**'
      - 'docs/**'
      - 'pkg/api/openapi/docs/**'
      - 'pkg/api/openapi/.openapi-generator-ignore'

jobs:
  verify-test:
    name: "Test RDS Provisioning"
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    environment: development
    steps:
      - name: Set up Go 1.18
        uses: actions/setup-go@v2
        with:
          go-version: "1.18"
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - name: Cache go module
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github
      - name: Verify & Test
        env:
          AWS_RDS_SECURITY_GROUP_ID: ${{ secrets.AWS_RDS_SECURITY_GROUP_ID }}
          AWS_RDS_DB_SUBNET_GROUP_NAME: ${{ secrets.AWS_RDS_DB_SUBNET_GROUP_NAME }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          source "scripts/lib/external_config.sh"
          export AWS_AUTH_HELPER="none"
          init_chamber
          load_external_config fleetshard-sync AWS_RDS_

          export GOPATH=$(go env GOPATH)
          export PATH=${PATH}:$GOPATH/bin
          make test/rds
        timeout-minutes: 35
