openapi: 3.0.0
info:
  description: The admin APIs for the fleet manager of Dinosaur service
  title: Dinosaur Service Fleet Manager Admin APIs
  version: 0.0.2
servers:
- description: Main (production) server
  url: https://api.openshift.com
- description: Staging server
  url: https://api.stage.openshift.com
- description: localhost
  url: http://localhost:8000
- description: current domain
  url: /
tags:
- name: Admin APIs
paths:
  /api/dinosaurs_mgmt/v1/admin/dinosaurs:
    get:
      operationId: getDinosaurs
      parameters:
      - description: Name of the request
        in: query
        name: name
        required: false
        schema:
          type: string
      - description: User that owns the request
        in: query
        name: owner_user
        required: false
        schema:
          type: string
      - description: Page cursor, provided with each page in case more pages are remaining.
          If missing then the first page is returned.
        examples:
          page_cursor:
            value: ODBEN0RDQzgtNzE5MS00QzM2LUJCQjgtNTFEQzIzQjhCOUFECg==
        in: query
        name: page_cursor
        required: false
        schema:
          type: string
      - description: Number of items in each page
        examples:
          size:
            value: "100"
        in: query
        name: size
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DinosaurList'
          description: Return a list of Dinosaur instances. This endpoint will return
            all Dinosaur instances that are stored in the database and the are not
            filtered based on user ids or org ids.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is invalid
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: User is not authorised to access the service
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error occurred
      security:
      - Bearer: []
      summary: Returns a list of Dinosaurs
  /api/dinosaurs_mgmt/v1/admin/dinosaurs/{id}:
    delete:
      operationId: deleteDinosaurById
      parameters:
      - description: The ID of record
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Perform the action in an asynchronous manner
        explode: true
        in: query
        name: async
        required: true
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dinosaur'
          description: Dinosaur updated by ID
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is invalid
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: User is not authorised to access the service
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: No Dinosaur found with the specified ID
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error occurred
      security:
      - Bearer: []
      summary: Delete a Dinosaur by ID
    get:
      operationId: getDinosaurById
      parameters:
      - description: The ID of record
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dinosaur'
          description: Dinosaur found by ID
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is invalid
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: User is not authorised to access the service
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: No Dinosaur found with the specified ID
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error occurred
      security:
      - Bearer: []
      summary: Return the details of Dinosaur instance by id
    patch:
      operationId: updateDinosaurById
      parameters:
      - description: The ID of record
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DinosaurUpdateRequest'
        description: Dinosaur update data
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dinosaur'
          description: Dinosaur updated by ID
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is invalid
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: User is not authorised to access the service
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: No Dinosaur found with the specified ID
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error occurred
      security:
      - Bearer: []
      summary: Update a Dinosaur instance by id
components:
  schemas:
    DinosaurDetails:
      properties:
        status:
          description: 'Values: [accepted, preparing, provisioning, ready, failed,
            deprovision, deleting] '
          type: string
        cloud_provider:
          description: Name of Cloud used to deploy. For example AWS
          type: string
        multi_az:
          type: boolean
        region:
          description: 'Values will be regions of specific cloud provider. For example:
            us-east-1 for AWS'
          type: string
        owner:
          type: string
        name:
          type: string
        host:
          type: string
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
        failed_reason:
          type: string
        actual_dinosaur_version:
          type: string
        actual_dinosaur_operator_version:
          type: string
        desired_dinosaur_version:
          type: string
        desired_dinosaur_operator_version:
          type: string
        dinosaur_upgrading:
          type: boolean
        dinosaur_operator_upgrading:
          type: boolean
        organisation_id:
          type: string
        subscription_id:
          type: string
        owner_account_id:
          type: string
        account_number:
          type: string
        instance_type:
          type: string
        quota_type:
          type: string
        routes:
          items:
            $ref: '#/components/schemas/DinosaurDetails_routes'
          type: array
        routes_created:
          type: boolean
        cluster_id:
          type: string
        namespace:
          type: string
      type: object
    Dinosaur:
      allOf:
      - $ref: '#/components/schemas/ObjectReference'
      - $ref: '#/components/schemas/DinosaurDetails'
      required:
      - dinosaur_operator_upgrading
      - dinosaur_upgrading
      - multi_az
    DinosaurList:
      allOf:
      - $ref: '#/components/schemas/List'
      - $ref: '#/components/schemas/DinosaurList_allOf'
    DinosaurUpdateRequest:
      example:
        dinosaur_version: dinosaur_version
        dinosaur_operator_version: dinosaur_operator_version
      properties:
        dinosaur_operator_version:
          type: string
        dinosaur_version:
          type: string
      type: object
    Error:
      allOf:
      - $ref: '#/components/schemas/ObjectReference'
      - $ref: '#/components/schemas/Error_allOf'
    ObjectReference:
      discriminator:
        propertyName: kind
      properties:
        id:
          type: string
        kind:
          type: string
        href:
          type: string
      required:
      - id
      - kind
      type: object
    List:
      discriminator:
        propertyName: kind
      properties:
        kind:
          type: string
        next_page_cursor:
          type: string
        size:
          type: integer
      required:
      - items
      - kind
      - size
      type: object
    DinosaurDetails_routes:
      properties:
        domain:
          type: string
        router:
          type: string
    DinosaurList_allOf:
      properties:
        items:
          items:
            allOf:
            - $ref: '#/components/schemas/Dinosaur'
          type: array
    Error_allOf:
      properties:
        code:
          type: string
        reason:
          type: string
        operation_id:
          type: string
  securitySchemes:
    Bearer:
      bearerFormat: JWT
      scheme: bearer
      type: http
