// Code generated by go-bindata. (@generated) DO NOT EDIT.

//Package generated generated by go-bindata.// sources:
// .generate/openapi/fleet-manager.yaml
package generated

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// ModTime return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _fleetManagerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5d\xeb\x57\x1b\xb9\x92\xff\xce\x5f\x51\xeb\xd9\x3d\xbe\xb3\x07\x1b\x3f\x78\xc5\xe7\xdc\x0f\x04\x48\xc2\xdc\x81\x24\x3c\x86\x64\xe6\xdc\xe3\x2b\x77\xcb\xb6\xa0\x5b\x6a\x24\xb5\xc1\xd9\xdd\xff\x7d\x8f\xa4\x7e\xa8\x9f\x6e\x1e\x93\xc0\x1d\xf8\x92\xd0\x2d\x55\x57\xfd\x54\xaa\x2a\x55\x49\x82\x05\x98\xa2\x80\x8c\x60\xd8\xed\x75\x7b\xf0\x13\x50\x8c\x5d\x90\x73\x22\x00\x09\x98\x12\x2e\x24\x78\x84\x62\x90\x0c\x90\xe7\xb1\x5b\x10\xcc\xc7\x70\x74\x70\x28\xd4\xa3\x6b\xca\x6e\x4d\x6b\xd5\x81\x42\x44\x0e\x5c\xe6\x84\x3e\xa6\xb2\xbb\xf6\x13\xec\x79\x1e\x60\xea\x06\x8c\x50\x29\xc0\xc5\x53\x42\xb1\x0b\x73\xcc\x31\xdc\x12\xcf\x83\x09\x06\x97\x08\x87\x2d\x30\x47\x13\x0f\xc3\x64\xa9\xbe\x04\xa1\xc0\x5c\x74\xe1\x68\x0a\x52\xb7\x55\x1f\x88\xb8\x63\x70\x8d\x71\x60\x38\x49\x29\xb7\x02\x4e\x16\x48\xe2\xd6\x3a\x20\x57\xc9\x80\x7d\xd5\x54\xce\x31\xb4\x7c\x44\xd1\x0c\xbb\x1d\x81\xf9\x82\x38\x58\x74\x50\x40\x3a\x51\xfb\xee\x12\xf9\x5e\x0b\xa6\xc4\xc3\x6b\x84\x4e\xd9\x68\x0d\x40\x12\xe9\xe1\x11\x9c\x62\x17\x3e\x20\x09\x7b\xee\x02\x51\x07\xbb\xb0\xef\x85\x42\x62\x0e\x67\xd8\x09\x39\x91\x4b\x38\x33\x04\xe1\x9d\x87\xb1\x84\x63\xfd\x19\xbe\x06\xb0\xc0\x5c\x10\x46\x47\xd0\xef\x0e\xba\xbd\x35\x00\x17\x0b\x87\x93\x40\xea\x87\xab\xe9\xfe\xed\xf4\xc3\xde\xfe\xd9\xcf\xe5\xf4\x0d\x16\xa7\x58\x48\xd8\xfb\x74\xa4\x84\x34\xf2\x01\xa1\x42\x2a\x82\x02\xd8\x14\xf6\xf6\xcf\xc0\x61\x7e\xc0\x28\xa6\x52\x74\xd7\x94\xec\x98\x0b\x25\x5e\x07\x42\xee\x8d\x60\x2e\x65\x20\x46\x1b\x1b\x28\x20\x5d\x35\x72\x62\x4e\xa6\xb2\xeb\x30\x7f\x0d\x20\xc7\xf1\x31\x22\x14\xfe\x16\x70\xe6\x86\x8e\x7a\xf2\x33\x18\x72\xe5\xc4\x84\x44\x33\xbc\x8a\xe4\x99\x44\x33\x42\x67\xa5\x84\x46\x1b\x1b\x1e\x73\x90\x37\x67\x42\x8e\x76\x7b\xbd\x5e\xb1\x7b\xf2\x3e\xed\xb9\x51\x6c\xe5\x84\x9c\x63\x2a\xc1\x65\x3e\x22\x74\x2d\x40\x72\xae\x11\x50\x6c\x6e\xf0\x39\x72\xc4\xc6\xa2\x3f\xd2\xfd\x66\x58\x9a\xff\x80\x52\x63\x8e\x14\x81\x23\x77\xa4\x9e\xff\x66\x46\xf3\x18\x4b\xe4\x22\x89\xa2\x56\x1c\x8b\x80\x51\x81\x45\xdc\x0d\xa0\x35\xe8\xf5\x5a\xe9\xaf\x00\x0e\xa3\x12\x53\x69\x3f\x02\x40\x41\xe0\x11\x47\x7f\x60\xe3\x4a\x30\x9a\x7d\x0b\x20\x9c\x39\xf6\x51\xfe\x29\xc0\x7f\x72\x3c\x1d\x41\xfb\xa7\x8d\x74\x58\x37\x4c\x5b\xb1\x91\x63\xb1\x6d\x75\xce\x00\x12\xb5\x03\x3f\x2b\x8b\x08\x7d\x1f\xf1\xa5\x52\x4d\x19\x72\x2a\xf4\xb4\x59\xe4\xdb\xe6\x81\xdb\xc0\x9c\x33\x2e\x36\xfe\x87\xb8\xff\xb7\x12\xc4\x43\xd5\xf6\xed\xf2\xc8\x7d\x8e\xf0\x69\xe6\x2a\x41\x7b\x8f\x25\x68\x51\x95\x71\x4a\x04\x28\xc5\x2c\x69\x46\xe2\x66\x12\xcd\x2c\x11\x3b\xa6\x85\x88\x1e\x04\x88\x23\x1f\xcb\x68\x5e\xc6\x4d\x0c\xa7\xad\x0c\xa7\x69\xcb\x0d\xe2\xb6\xaa\x86\xa2\xd9\x28\x88\x67\x3b\x04\xbf\x12\x21\x2b\x87\x41\xbd\x54\x96\x2d\x60\x42\x10\xe5\x2a\x32\x50\x96\x0e\x87\x97\xef\xa2\x0c\x66\xa6\x5b\xc5\xf0\x14\xf0\x15\x12\xc9\x70\x35\xbe\x91\xc1\x3e\xd3\xad\x9f\x23\xcc\x19\x06\x2b\xa1\xfe\x78\x9d\xb2\xba\x95\x63\x35\xd3\xf0\x82\xe2\xbb\x00\x3b\x12\xbb\x91\xea\x33\x47\xdb\x5c\xf7\x59\xcc\x62\xf5\x83\xef\x90\x1f\x78\x36\xf8\xf1\xcf\x56\xaf\x77\x68\x5e\x16\xdf\x95\x7f\x28\xa6\xb5\x91\x76\x6d\xd7\xa9\x9f\x51\x1a\xa5\x80\x1c\x0b\x16\x72\x07\x8b\x75\x10\xa1\x33\x57\xd1\xd5\xed\x1c\xab\xd0\x06\x7c\x74\x47\xfc\xd0\x87\x28\x38\x01\x07\x05\xc8\x51\x41\xc0\x1c\x09\x98\x60\x4c\x81\x63\xe4\xcc\x13\x48\x45\x14\x24\xd8\x5a\xfb\x16\x23\x8e\xf9\x08\xfe\x80\x7f\x16\x34\xd7\xc1\x54\x72\xe4\x35\x34\xd3\xfb\xa6\xb5\x65\xa8\x33\xe3\x7d\xae\x82\xbd\xa4\x8f\x8a\x44\x18\xf5\x96\x80\x42\x39\x67\x9c\x7c\x33\xe1\x99\x8e\xdd\x80\x50\x83\x01\xf2\x31\x30\x3e\x43\x94\x08\xd3\x09\x19\x70\xd8\x2d\xc5\x3c\xfb\x86\x4d\x4d\x97\x00\x3b\x64\x4a\x54\x60\x64\xb8\xe9\x3e\xc7\x99\x14\xf1\x76\x8a\x6f\x42\x9c\xb5\x5a\xf5\x6a\x97\xed\xf7\x1e\xcb\xd3\x48\xaa\x87\x2a\x63\x96\x60\x4e\x2f\x1b\x7c\xf7\x92\xc8\xf9\x3b\x44\x3c\xec\xee\x73\xac\x31\x32\xd6\xe1\x69\xf8\xa9\xa1\x5c\x69\x7e\x22\x0a\xc0\x0d\x09\x98\xb2\x90\xba\xda\xf9\x1e\xa4\x03\xbf\xd9\xeb\x3f\x93\x60\xa1\x7e\xbc\x37\x7b\xfd\x87\x22\x99\x76\xad\x84\x6a\x2f\x94\x73\x90\xec\x1a\xeb\xc9\x48\xe8\x02\x79\xc4\xb5\x41\x1a\xbe\x10\x90\x86\x0f\x07\x69\xb8\x0a\xa4\x0b\x81\x39\x50\x26\x73\x76\x0a\x39\x0e\x16\x91\xa5\x36\xc6\xd7\x06\x6e\xf3\x85\x00\xb7\xf9\x70\xe0\x36\x57\x01\x77\xc2\x0a\x73\xf1\x96\xc8\xb9\x65\xa1\x8f\x0e\x00\xdf\x11\x21\x45\x75\xc0\xf0\x5c\xa1\x7b\x52\xff\x5f\x80\x6e\x55\x64\xb4\xda\x8d\x43\x59\x58\x81\x0a\x03\x92\x9a\x45\x17\x7b\x58\xe2\x52\xcf\x6e\x5e\xad\x70\xee\xff\x9b\xb0\x72\xae\xfc\xb3\x72\xec\xc6\x95\x5b\xd3\x66\xca\xb8\xc9\xf8\xa4\x41\x00\xe2\x16\x80\xfd\x9f\x75\x67\xe4\xfa\x84\x12\x21\x39\x92\x4a\xf4\xe9\x43\x3d\x3e\xc0\xc0\x10\x34\x7d\x15\x3b\xeb\x80\xa8\x6b\xb8\x23\x53\x20\x52\xa7\x43\x3c\xc1\xd4\x62\x4a\x3e\xe2\x53\xe5\x6b\x31\x42\x47\x70\x13\x62\xbe\xb4\xc6\x99\x22\x1f\x8f\x00\x89\x25\x75\xaa\x46\xff\x13\xe6\x53\xc6\x7d\xfd\x45\xe4\x98\x58\x89\x02\xa2\xa6\xd7\x9c\x33\xca\x42\x01\x3e\xa2\x54\xe7\x3e\xea\xb4\x5e\x2e\x03\x3c\x82\x09\x63\x1e\x46\xd4\x7a\xa3\xc6\x9f\x70\xec\x8e\x40\xf2\x10\xd7\x46\x48\x83\xea\x00\xfe\x40\x2b\x46\xc6\x63\xbc\x8c\xd9\xbb\xd9\xeb\x69\xde\x09\xa3\x0f\x37\x80\x79\x12\xd5\x79\x13\xe5\x56\x8d\x1e\x99\x15\x62\x71\xa1\xf3\x1a\x90\xbc\x06\x24\xaf\x01\x89\x0a\x48\x8c\x4d\x79\x44\x58\x92\x21\xf0\x97\x0d\x4e\x1e\x07\x63\x9e\xc0\xc3\x03\x95\x38\x04\x31\xe4\xea\x43\x90\x66\x71\x4d\x80\xa4\x33\x1f\xe5\xe9\x5f\x04\x2e\x92\xd8\x22\x1f\xd7\x33\x32\xf9\xd4\xd7\x88\x25\xf9\x54\xb3\x10\x32\x13\x07\x86\x1a\xe3\x62\x1c\x18\x8d\xe4\x5b\xe6\x5a\xd4\xb2\x6a\x62\x46\x27\x62\x73\x1a\xf3\x92\x34\x2e\x99\x48\xf5\xd3\xa8\x7c\x12\x35\xc8\xb8\x18\x4e\x0a\x79\x97\x7b\xc4\x43\x35\x09\xcd\x58\xf7\x0c\x50\xf9\xa4\xc3\x8b\x4b\x2f\x7d\x62\xe2\xcf\xce\x2f\x15\x22\xc6\x0c\x9e\x6f\x91\x1b\x2b\xd7\x33\xb0\xba\x85\x18\xed\x1e\xa1\xcb\x0f\xe5\x7a\x58\x93\x82\x17\xa6\x24\x6c\x85\x13\x62\x65\x38\xf1\x43\x85\xd9\xac\x16\xc6\xf2\xe9\x26\xe9\xa7\x3d\x7a\xd6\x0a\xfe\x98\xf9\x98\x17\xe3\x45\x96\x45\x8a\x6b\xdc\x46\xd5\xc6\xaa\x92\x82\x21\x12\x30\x51\x5e\x4e\x70\x38\x4e\x9d\x4d\x99\xfb\x3e\x44\xce\x1c\x22\x62\xba\xdc\x81\x40\x10\x3a\xf3\x4a\xbd\xa1\xf2\xa1\xb9\xf7\xca\xb9\x76\x41\xe7\x96\xb1\xd9\x1f\x72\x9b\xa8\x8f\x9c\x23\xed\x68\x55\x4b\x6d\xc6\x95\x12\xa9\x0e\xc6\x19\x67\x28\x87\x72\x8e\xa9\x54\xb8\x27\xf1\x02\x8e\xad\xd6\xbf\x59\x7a\x60\x95\x9b\x8f\xe1\xb3\x36\x07\x7c\x4f\xdf\x1e\xbb\x2d\xb4\xf4\x18\x72\xb3\x5e\xaf\xca\xe7\x5d\x9c\x9d\xe2\x19\x29\xce\x95\x15\x6e\x2d\xee\x56\x51\x30\x39\xbc\x78\x10\xd5\xb8\x5b\x81\xea\x83\xd3\x35\xaf\x11\xc7\xaa\x8c\x83\xe3\xe0\xe0\xa5\xe6\xb0\xe2\xc2\xd8\x23\x72\x58\x39\x12\xaf\x39\xac\xd7\x1c\x56\x0c\xd2\x13\xe7\xb0\x12\xb2\xc7\xe8\x6e\xcf\xf3\xd8\x2d\x76\x8f\xa2\x35\xfa\xa9\xd9\xa3\xf0\x88\xef\xad\xa2\x59\xca\xc8\x39\xe6\xbe\x38\x61\x32\xb6\x01\x8f\xf8\x7e\x05\xa9\xfa\x1c\xde\x94\xf1\x09\x71\x5d\x4c\x01\x13\xbd\x9b\x63\x82\x1d\x14\x0a\x9c\x46\x1b\xd9\xc8\xbc\x32\xd1\x07\x2c\xdb\x37\xde\x15\x42\x43\x7f\x62\x16\xdc\xe9\xee\x4e\x1d\xda\x38\x88\xc2\x04\x47\x31\x56\x14\xe0\x10\x61\xbe\x99\xdf\x39\xd2\xad\x8e\xbe\x9f\xaf\xee\xfe\x99\x75\xcd\xf3\x34\xbe\xc3\x6e\xb2\x39\x07\x5c\x86\x05\x6d\x4b\x93\x34\xb4\x31\x7b\xf3\x42\x30\x7b\x73\x82\x7c\xbc\xcf\xe8\xd4\x23\x8e\x7c\x38\x7e\x65\x64\xaa\x8d\xa5\xc2\x43\xb7\x4c\xf5\xce\xc5\xd2\xac\x7e\xa2\x4d\x40\x4e\xe4\xa2\x4c\x4a\x8b\x88\x04\xf2\xea\xf5\xd4\x73\x05\xf9\xcf\xad\x1a\xef\x51\x08\xab\xd6\x8e\x70\x3b\x27\x5e\x8c\x25\x9d\x69\x60\x73\x99\xd8\x88\xec\x3d\x6b\xcb\xe9\x02\xaa\x8c\x9c\xb5\x59\xac\xa4\x1a\x1d\xef\xb0\xcc\xf5\x14\x65\xcb\xbd\x8f\xd4\x5b\x02\x4f\xf6\xc7\x31\x81\xe3\xc5\x5f\x64\xd3\x10\xc7\xd9\xf5\x5a\x59\x3a\xd4\xac\xe1\x9a\x2c\xd9\x2a\xf6\xb6\x89\x7b\xa1\x74\xef\x0c\xe2\xde\x2a\x4c\xe0\xc7\x05\xf5\xf9\xfd\xb5\x70\x8f\xc0\x5e\xf5\x7d\x9a\x80\xde\xa2\xf4\x32\xd3\x88\xab\x80\x3b\x26\x42\x10\x3a\xfb\x14\xa7\x0c\x1e\x11\xdc\x57\x90\x7a\xe9\x29\xcd\x55\x08\x3e\x71\x7c\xff\xd7\x0d\xd9\x1f\x5b\x76\x7e\x91\x69\xce\x26\x48\x3f\xa9\x1f\xaf\x3b\xc7\xd1\xae\xca\xac\x52\xe4\x5b\x43\xb5\xb2\xb9\x4e\x79\x8e\x95\xf7\xbb\x47\xa7\x00\xcd\xee\xf3\x0d\x41\xbe\xe9\xe6\xb9\x74\xaf\xc7\x42\x77\x1c\x70\xb6\x20\x2e\x2e\x39\x64\x52\x7b\xf4\x42\x84\x41\xc0\xb8\x52\x11\x4d\x06\x12\x32\x55\x4e\x5a\xb5\xfa\x94\x6b\xf4\x60\x57\xdd\x1e\xf4\x7a\xed\x4a\xfd\x35\xfc\x62\xb7\x31\xb3\xf0\x5d\x5d\xb7\x8d\x44\xd6\x73\xb7\x37\x7b\xfd\x6a\xb1\x5e\x8d\xbe\x01\x69\xab\x6e\xec\x5f\x6d\xd7\x63\x6c\xd7\x9f\x61\x57\xf4\x01\x95\x0d\xae\xd3\xe7\x0f\x36\x32\x51\xf7\x64\xef\x44\xc5\x84\x6e\x62\x7c\x4c\x22\xff\xb9\x98\xa0\x58\xb2\x1f\x66\x89\x0c\x1c\xaf\x76\xe8\xd5\x0e\x25\x3f\xdf\xcd\x0e\xad\xa8\x4e\x67\x1b\x3f\xb5\xd1\x6a\xd8\x3c\xce\xcf\x8e\xe5\x32\xc0\xed\xb5\xb5\xb4\x95\x92\x27\x42\xd8\x88\xf6\x71\x72\x85\x1d\x79\x8a\xa7\x98\x63\xea\x24\xe0\x99\x52\x2e\xd3\x2f\x63\x50\xb8\x32\x51\x92\xd8\xe8\x13\xd7\x46\xdb\x74\x12\x92\x13\x3a\x4b\x1e\x5f\x13\xba\xba\xd1\x5c\xc9\x53\xdf\x28\x29\x5a\x5a\x30\x58\x53\xb8\xa3\x3f\x14\xfd\xea\x12\xa5\xd5\x3e\xa1\x48\x32\x9e\x76\x88\x24\x58\x9e\xe8\xaa\xb8\x6a\x9f\x7e\x51\x37\x52\x16\x65\x54\xf3\x3d\xeb\x13\xea\x57\x35\x88\xd6\xaf\x6a\x90\x6c\xe6\x24\xf6\xc5\xfd\xe0\x6c\x84\x95\xfa\x6a\xb1\x11\xa1\x12\xcf\xac\x0a\xbd\x62\x66\x55\xab\xc6\x30\xe9\x57\x7a\x42\xc6\xad\x90\xe7\x7d\x9c\xae\x9a\x1c\xf1\x54\xce\xe9\x98\x3d\x4d\x4a\x80\xa9\x02\x07\xb4\xf5\x71\x0b\xf3\xbb\x14\x24\x33\x82\xa8\xc4\x16\x55\x36\x4f\x1c\xf0\x38\xab\xd5\xa5\x9d\x92\x23\xe2\x0f\x02\x44\x75\x7c\x04\x0a\x5a\xb3\xca\x59\x44\x9c\xa3\x65\xee\x4d\x69\x73\xa8\x65\x50\x8b\x67\x38\xcc\xe6\xcb\xbe\xd3\xf8\x17\x27\x9f\x69\xee\x87\x9e\x24\x63\xf4\x2d\xf7\xd8\xac\x47\xed\x0c\x6d\x03\x14\xed\x63\xf4\xe9\x4f\xc6\x21\xb6\x7e\x43\x5e\x88\xc5\x08\xfe\x40\x51\x25\x6e\x1d\x02\x8e\x03\xa4\xf4\x60\xdd\xc4\x43\x82\x30\xaa\x7f\xe3\x18\xb9\xcb\x75\x98\xea\x43\xa6\xeb\xe0\xe2\xe4\xf5\xba\x39\xf3\x44\xe8\xec\x9f\xd0\x6a\xaa\x8e\xd9\x88\xb4\x9e\xcd\x13\x7d\xb0\x79\x0a\x3a\x38\x82\x30\xda\x73\xe7\xe2\xc0\x63\xcb\x2e\xbc\x63\x3c\x76\x9c\xb0\x77\x79\xd6\x98\x83\x18\xec\x72\x4d\x2b\x6e\xf3\x81\x28\x2e\x6c\x02\x69\x72\xe1\x8e\x15\x24\x47\xdb\xea\x9c\x5c\xb4\x99\x11\x60\x04\xa1\xe8\x60\x24\x64\xa7\xaf\x53\xed\xf7\x91\x27\xcd\x5a\x34\xb7\x09\x05\xc5\x6a\xdc\x55\x6f\xbd\x6a\xda\x78\x6e\xed\x5b\x5b\xd9\x38\xaa\xb3\x8e\x51\xa1\xcb\x94\x71\x1f\xc9\x11\xb8\x48\xe2\x8e\x24\x3e\x6e\x4a\x32\xda\x62\xfc\x94\x24\xcd\x3c\x18\xdf\xd3\x08\xc7\xb7\x15\x35\x6d\x9f\x89\x74\x1a\xf6\xc2\x65\x71\x62\x99\xfd\xaa\xdf\x04\x54\x66\x1e\x5f\xb6\x47\xc8\x71\x9c\xfe\xd4\xf3\x9e\x85\xc0\x48\x91\xbb\x04\xe8\x3b\xb9\x8d\xd2\x91\xd5\x41\x15\xb4\xf6\x3e\x1d\x45\x4c\x65\x0d\x06\x51\x2f\x17\xfd\xec\xc3\xb9\x61\x2b\x93\x23\x68\xe5\x22\x11\xcf\xc3\x7a\xbb\x64\x01\xc8\x8e\xa1\x19\xd7\x13\xf3\xf6\xa9\x9c\xfa\x46\x75\xf3\x48\x80\x08\xe6\xac\xa6\xd4\x85\x4a\x95\x0c\x7e\x2f\xc5\x28\x1d\xc0\xcc\xad\x2f\x31\xcd\xec\x75\x5c\xba\x7b\x52\x49\x8d\x77\xa5\x44\x37\x98\xc4\x69\x0d\x98\x30\x37\x66\xbf\x30\xee\xd9\x5d\xc1\xe6\xc7\x47\x77\xe3\xf8\x42\x93\x71\xb4\x1b\x25\xb3\x03\xb2\x61\x90\x5e\x46\xbb\xb0\xa3\x43\x5f\x9a\x96\xee\xe6\x40\x01\x89\xf8\x2f\x84\xe4\xcd\x63\x9f\x12\xfe\x1b\xe8\x41\xa9\xd8\x75\x1e\xfa\x88\xba\xba\x96\xfd\xf0\x6b\x61\xb2\x02\xda\x81\x42\xe9\xd6\xda\x26\x4a\x90\x1c\xef\x62\xee\x12\x04\xa6\x52\x05\x38\xc9\x9c\x81\x4f\x1f\xcf\xce\x6b\xd6\x6d\xca\x17\xdf\x73\x90\x2b\xa3\xaf\xc2\x50\xe7\x72\x63\xb7\xfa\x8e\x40\x99\xe8\x40\x5c\x79\x4f\xe6\x47\x12\xfa\xc4\xfb\xa5\x08\x5d\xb5\xe4\x2b\x8b\xc4\xb2\x68\x61\x69\x36\xb3\x48\xa6\x35\x5a\xfd\xeb\x30\x3a\x25\xb3\x70\x05\x33\x92\x29\x56\xf4\x07\xf6\x7e\x2f\xf0\x91\x0f\xf2\xf2\x41\x4d\x86\x89\xb6\x42\x83\x46\xa1\x68\xcd\x37\xbb\x70\x24\xc1\x0f\x85\x54\x2c\x8a\x28\xd7\xe8\xb1\x5b\xcc\x3b\x0e\x12\x18\x90\x17\xcc\x11\x0d\x7d\xcc\x55\x2c\x38\x47\x1c\x39\x12\x73\x01\x8c\x43\xbb\xdd\x69\xb7\xd7\xd5\x54\xe2\xd1\x09\x4b\x44\x4d\xfb\x09\x96\x76\x6b\x73\xce\x0d\xc7\xa7\x36\xe2\x56\x05\xaa\xa6\x9d\x83\xa8\xae\x45\x4e\x30\x78\x8c\xce\xb0\xd2\x39\x44\x61\x38\xb0\x3e\xdf\x6d\xaf\x1a\xa5\x62\xf4\x5b\xb2\xd1\x4b\x35\x79\x72\x1d\x29\x94\x67\xfe\xcc\x18\xa4\xce\xc9\x16\x18\xc9\x7a\x33\x9d\xba\x80\x56\xce\x95\xea\x54\x45\xe1\xa9\x72\x45\x79\x3b\x55\xbf\xb1\xc3\xfe\x76\x49\xf9\xf9\x79\xc6\x4e\x36\xd3\xad\x74\x30\xd3\x0c\xf7\x0f\x1d\xca\x94\x8d\xef\x3d\x90\x95\x07\x22\x9e\xef\x30\x1a\x96\x5b\xc5\x19\x59\xea\xe0\xda\xfb\xd9\x55\x6e\xbb\xc6\x1b\xe5\xf3\x82\x59\x42\xa9\xc3\x56\x16\x45\x89\x9c\xec\x6d\x34\x23\xde\x85\xcb\xc8\x9c\xb4\xdb\x19\xc6\xda\x6d\xf0\x08\xbd\x5e\x6d\xda\x48\xcd\xe7\x2f\x28\xb9\x09\x31\x10\x17\x53\x49\xa6\x04\xa7\x27\x96\xcd\xc7\x57\x12\x77\x89\x08\x3c\xb4\x1c\xd7\x3b\x97\x13\xcb\xb1\xe4\x5c\xae\x0a\x12\x22\x22\x10\x84\x3c\x60\x02\x37\x30\xd7\xf5\x9f\xfb\x10\xfa\x88\xc2\x94\x13\x4c\x5d\x6f\x59\x22\x5d\x96\x87\x75\xcd\x44\x9c\x65\xf9\x17\xba\x15\xff\x5a\xcd\x01\xa6\x68\xe2\xe1\x1a\x68\x2f\xa3\x00\xac\x44\x66\x22\xe2\xee\x46\x7c\x9d\xeb\x21\x74\xa6\x5c\xdd\xc7\xb3\x03\x70\xcc\x3d\xbe\x25\x4c\x64\x7d\x7a\x59\xb8\x14\x11\xce\x5b\xa3\x72\x35\x3e\x48\x7f\x53\xd0\xa0\xd8\xc7\xe9\xff\x3b\x3f\x4e\xc7\x0d\xcf\xed\xf6\x8b\x53\xee\x08\xbf\x32\xa5\xce\x69\xd9\x49\x17\x7e\x23\x7c\x46\x28\x41\x4f\xad\x6d\x11\x13\x4f\xa5\x65\xe6\x63\x53\x14\x7a\x72\x04\x53\xe4\x89\x34\x8d\x94\x14\x99\xc7\x99\x5c\x4e\xf5\xf2\xaa\x7d\x5e\x13\x37\x25\xf7\x34\x68\x1a\x56\x05\x3b\x3e\x94\x60\x04\x2b\x61\x38\xef\x24\x8c\x83\x80\x8c\x2b\x68\x58\x96\xb2\xe7\x8f\x79\x52\x25\xa4\xbd\x28\xca\xdc\x25\x70\xcf\x3a\xdc\x4f\x7a\x78\x28\xbb\xb5\x4e\xa3\xaa\xc1\x93\xf1\x55\x14\x29\x10\x53\x82\x3d\x33\x9a\x26\xe9\x97\xd0\x28\x4f\x8f\x56\xe4\xd0\x68\xe8\x79\x4a\x48\xb3\x80\x86\xb5\xb5\x62\xd1\x34\x9d\x56\xe6\x14\x6a\xf9\xb5\x19\x6a\x30\x8f\x0e\xcc\xbd\xa4\x0e\xe3\xc9\x4d\x1f\xb9\x8a\x71\x09\x1b\x84\x8e\x20\x40\x72\x9e\x1f\x88\x74\x49\x3f\x25\x9e\x5d\xc3\x35\x6c\x44\x0f\x2d\x22\xf6\xa1\xd9\xd2\x5b\x7e\x7d\x2c\x39\x71\xf4\xe2\x6a\x8a\xa5\x33\xef\xc2\x3b\xf5\x8f\xbe\x1c\x3e\x7e\x77\x3b\xc7\x14\xb0\x1f\xc8\x65\xd7\xf4\x53\x83\x4a\xb0\xd0\x1b\xc9\xd3\x5b\x44\x24\xe6\x14\xc5\xbd\x34\x47\xa2\x5b\x2b\x72\x56\x2d\x0b\x51\x4b\xb9\xcd\x89\x67\x5a\x7a\xc9\x49\x5a\x32\x34\x28\x58\xa5\xcb\x5a\x08\x3e\x99\xcb\xdc\x5d\x7c\x57\x80\xd9\x9e\xc6\x0d\x86\xab\x58\xba\xcf\x17\x32\x17\xc8\x0b\xad\xf8\xd1\xae\x60\x1a\xa6\xad\x02\x6b\x2d\xd3\x27\xe9\x41\x25\x85\x17\x10\x0a\x18\x39\x73\x5b\xe8\x27\x14\x23\x5f\x69\x4d\xc4\xe8\xf5\x8c\x20\xb6\xe9\x37\x82\x58\xf9\x88\x7a\x41\x32\x6e\xc1\xde\x72\xfe\x40\xfe\x8b\x73\xdc\x30\x94\x3e\x6f\xc2\x96\xde\xbb\xab\x4f\x49\xb0\xdb\x68\xf7\xd3\x93\x70\x57\x9a\xcc\x8f\x8c\x87\xfd\xaa\xca\x8e\x14\x2e\xeb\xd1\x71\x82\x9a\xb5\x7a\xce\x47\x8c\x8a\xd0\x93\x02\x26\xcb\x0a\x49\x1b\xe8\x40\xb9\x78\x45\xcd\xc0\x0b\xe4\x8d\x2b\x2b\x14\xb1\x9e\xa8\x56\xe9\x8a\x49\x35\x76\x11\x77\x57\xf7\x8b\x5b\xaa\xbe\xf1\x8e\x30\x9d\x35\x8b\x59\x88\xb6\x84\xd9\x72\x29\xc7\xac\x9f\x46\x0f\xcd\x2f\xef\xa2\x1a\xcf\x2f\x97\xe7\x19\xb7\x33\x97\x32\x58\xcb\x0b\x96\x3b\xab\x1e\x93\x37\x5c\x25\x6c\x46\xb9\x10\x68\x25\xe5\xba\x54\xc4\x5c\x6e\x0d\x5a\xe8\xd6\xca\x7a\x9b\xf1\x6e\x45\xb9\x46\x14\x10\x99\x14\x15\x72\x07\xda\x57\x7d\x1a\x87\x9d\x5b\xfc\x44\x9f\x2e\xad\x00\x55\x30\xa0\xb3\xff\x7d\x72\xf6\x75\xfb\xf4\xf3\xf0\x97\x7f\x1c\xed\x7e\xee\x7d\x3c\xf7\xaf\x3e\xbf\x73\x87\xcc\x79\x77\x3a\x6b\x65\x63\xde\xa4\x52\x90\x3e\xaf\x2d\x10\x6c\x34\x22\x1d\x55\xb7\xa1\xa5\xcb\xd2\x4d\x11\x48\x12\x8d\x76\x5e\xbc\x7e\x34\x2d\x93\x02\x2d\xe4\x11\xbb\x50\x53\x52\x3e\x85\x96\xbf\x54\x4f\x6a\x50\xb7\x70\x60\x42\x66\x5e\x75\xfa\x44\x2c\xb7\xf9\xcd\xf0\xea\x9a\xec\xde\xf4\x98\xf4\xaf\x6e\xa6\x4a\xf6\x29\x9f\x75\x23\x3d\xed\x6a\xc4\xba\x0e\xf3\x2d\xa9\xd3\x92\xa9\xbe\xd5\xa0\xd7\xe9\xf7\x3a\xbd\xad\xf3\xfe\x60\xb4\xd5\x1f\x0d\x36\xbb\xbd\xad\x61\x7f\x73\xf0\x7b\xda\xc3\xaa\x88\x16\x7a\x6c\x8f\x86\xdb\xdd\xe1\xf6\x60\xd0\xdb\xb5\x7a\x24\x7f\x68\xa5\x35\xe8\x6e\x77\x7b\xe9\x8b\xec\x4c\x4e\x66\x78\x89\x5e\x35\xb8\xfa\xfa\x59\xeb\x9a\xa9\xf9\x7e\x2f\x65\x9b\xb0\xc9\x5f\x54\xd5\xb2\xb5\x75\x68\xa1\x68\xaf\x53\xd9\x39\xcc\xf4\xc0\x6b\x7e\x74\x9a\xeb\x65\xc9\x79\xbb\x9c\x1e\x66\x6b\x94\x56\xb7\x56\x36\x4e\xca\x64\x07\x8b\x59\xc4\x42\x7c\xdb\xb9\x87\x86\xd7\x69\xf9\x13\x69\x3a\xd4\x58\xd6\xd5\x0a\x5f\xa3\xf4\xab\x14\x1f\x56\x58\x5a\x68\x3a\x05\xa0\x7e\x1a\xc0\x53\x4e\x05\x78\xd0\x74\x80\x07\x4d\x09\xa8\xb3\xc0\xb0\x4a\xdb\x4b\x4a\x07\x2b\x14\xbd\x98\xb7\x87\xd8\x1c\x97\xc5\x14\x99\x67\x99\x9c\x10\xb4\xf6\x7c\xf4\x8d\x51\xb8\xc4\x93\xb8\x38\x6e\xb5\x8d\xb3\x36\xa9\xba\x14\xd3\xe3\x0d\x58\xb5\x73\xd3\x09\xa3\x25\x7a\x96\x63\xed\xe2\x0c\x0e\x91\x90\xeb\x60\xa5\x9a\xea\x78\x83\xba\x84\x0e\xfc\x91\xc6\xac\xeb\x51\xdc\x6b\xd6\xa7\xc7\x66\x11\x7d\x8a\xe8\x0c\x7f\x56\xb1\x78\xbd\x60\x66\xf5\x6c\x9b\x89\xb1\x66\x78\x3c\x1e\xc5\xd5\xf9\xb1\xf9\x5b\x5e\xe3\x09\x67\xd7\x98\x4b\x16\x10\x27\x5a\xa9\x8f\x27\x4b\x89\xc5\x98\xd0\xb1\x64\xd2\xba\x34\x32\x29\xec\x8f\xcd\x46\x50\xc6\xc7\x84\x8d\xa3\x04\x57\x42\xb7\x53\xbc\xbd\x4e\x13\x1f\xc1\x78\xec\x30\x2a\x42\x5f\x4d\xc1\xe9\x54\x60\xeb\x8c\xf5\xc2\xec\x22\xcc\x98\x35\x49\x7c\x2c\x24\xf2\x83\x11\xf4\xb7\xfb\xfd\xed\x9d\xde\x60\xd8\x8b\xff\xbc\x58\xa6\xe3\x08\x76\x37\xfb\x5b\x9b\xab\x7a\x6f\x57\xf6\xde\xda\xdd\xdd\x5d\xd5\xfb\x4d\x65\xef\x9d\xed\xc1\xc0\x1e\x24\x73\x23\x8a\xfc\x37\x1c\xa6\x95\x43\x52\x18\x8e\xea\x8b\xbf\x4b\xc3\xb4\xde\xb0\x10\x8e\x59\x1b\x6d\xa1\xca\x45\x45\x7f\xda\x2c\xd3\x5d\x6f\x84\x86\x96\x4e\x83\x76\x8e\xdf\x1f\x9f\x77\x32\xaf\x93\xc8\xe0\xcc\xba\xc3\x2d\xbe\xdd\xcd\xdc\x02\x93\x4c\xd3\x75\x08\x05\x36\xb7\xbd\xfd\x5d\x27\xf3\x92\x44\x9e\x15\x5d\xd9\x7b\xa3\x95\x3b\xbe\x3c\x22\xfe\xcd\x7b\x87\x1f\x84\xbf\x6e\xf7\xd1\xc5\xdd\xd1\xef\x37\x6f\xcf\x6f\x4e\x4e\x23\xeb\x50\x7d\x9b\xd4\x2b\x30\x2b\x4e\xe4\x97\x01\x34\xe8\x3f\x06\x1f\xbb\x77\x11\x1e\xfb\x6d\x82\x8e\x6f\x78\xd4\xf9\xd5\x54\xec\x64\x7a\x81\x7d\xd6\x25\x0f\x81\x77\x79\xf0\x3e\x5c\x4e\x8e\xf8\x21\xbd\xe3\x7b\xd8\xdf\x19\x6c\xce\x6e\xae\xaf\xc9\xc1\x22\x86\x20\x7f\x9d\x4e\x99\xc8\x3b\x8f\x91\x78\xa7\x4e\xe0\x9d\x12\x79\x9b\x5c\xc2\x93\x70\x5f\x7a\x19\xf6\x8f\x97\x21\x89\xbd\x23\xe6\xf5\xc6\x17\xe2\xfe\xbd\xdd\x27\xff\x18\xba\xe1\x6f\x5f\x8f\x16\x8b\xad\xaf\x8b\x5f\xbd\xe5\xb7\xbe\xff\xfe\x74\xf8\xcb\xf2\xe6\xa4\xad\x35\x5e\x5f\x6f\x5a\xa3\xd3\x5f\x3f\xee\xcc\x06\xb3\xed\x0f\xe7\xee\xc5\x3f\x2e\xd0\xe0\x5a\x7c\xd8\x1d\x5c\x7f\x3e\x18\x2e\x63\x48\xf2\x67\xd4\x4a\x27\xf9\xa3\x74\xb8\x5f\xab\xc3\xfd\x32\x1d\xbe\xd0\xd1\x09\x48\xa6\xe2\x42\x32\x5d\xc2\x2f\x97\xe7\xe6\x08\xe0\x08\x4e\xa3\x0c\x5e\x72\xfb\x80\x59\x21\x99\x03\x82\x8d\x20\x19\x5e\xcc\x0f\xe7\xb7\xfe\x97\xb7\xc1\xe5\xa7\xe9\xd1\xc0\x3b\xc1\xd7\x81\xbb\xf9\xfb\x41\x0c\x49\xfe\xee\x84\x32\x48\x36\x1f\x83\xc8\x66\x1d\x20\x9b\x65\x78\x08\xcc\xa1\x3d\x61\x93\x76\xd3\x8b\xc0\xba\x35\x93\xfc\xeb\xf0\x82\x1c\xce\xbf\x51\x0b\x80\xab\xc0\xdd\xfc\xba\x9f\x00\xd0\xf4\x62\xb6\x32\x64\xb6\x1e\x83\xcc\x56\x1d\x32\x5b\xf5\xc8\xcc\x91\x88\x37\x33\x02\x2a\xb9\xf9\x6c\xdb\xfc\xed\x61\xbd\x23\x2b\xba\x03\x6d\x25\x4a\xd7\x77\x0a\xa5\xdf\x3e\xe1\xa3\x01\x3b\xc1\x57\xee\xf0\xcb\xdb\x04\xa4\x15\x97\xc6\x95\x4e\xa4\xc1\xa3\x26\xd2\xa0\x76\x22\x0d\x4a\xe0\x49\x26\x8b\x54\xcc\xc2\x1c\x2d\x70\xb4\x5b\x0e\x53\x88\x0f\xc6\x54\x82\x70\xfd\x65\xff\xdb\xa5\x96\x3d\x06\xe1\xd7\xc5\xbb\x37\x57\xc7\x9f\xbf\xc6\x20\xd4\xdd\x14\x56\x06\xc0\x70\xfb\x31\x00\xd8\xbd\x8b\x00\xd8\x6f\xf3\x96\xd5\x2a\x33\xeb\x5d\x8e\xfa\xea\x7c\x9d\x04\xd0\x47\x6e\x2a\x11\xd8\xbe\xfe\xda\x53\x6a\xf0\x2d\x85\xe2\x2b\x9e\xbb\xc3\xc3\xc8\x58\x14\x8f\xae\x96\x49\xfd\xe6\x31\x42\xbf\xa9\x93\xf9\x4d\xa9\xf1\x4c\x2f\xb9\xc6\xd9\xef\x14\x6c\x21\x3e\x8c\x47\x74\xfb\xeb\x6c\x3e\x3d\x7e\x33\x7b\x7f\x2a\x3e\x2c\x0e\x2f\x13\xf1\x1a\x7b\xcc\xef\x2b\xa4\x39\xe4\x1c\x9f\xcd\x02\x15\xe8\x09\x2c\x47\xf0\x71\xff\xb8\x73\xf8\xa5\xf3\x66\x14\xa5\xcc\xcc\x61\x2a\x25\x42\xda\x06\xdf\xc9\x4e\x26\x43\x72\xd7\x1b\x7a\xd4\xf5\xfc\x9b\xde\xcd\xd4\xd9\x11\x44\xa2\x2d\xe1\x5d\x2d\x76\xed\x35\xc8\x94\xf1\x78\xcb\x84\x96\xb7\x3f\xdb\x72\x77\x77\x6f\x7a\x1e\x77\xdc\xc5\xe6\x6c\x07\x79\x93\x1d\xe1\x4d\x67\xf4\x6a\xe8\xce\x27\xe2\xea\xbf\xfe\xe3\x6f\x87\x5f\xce\x4f\xf7\xe0\xbf\x8d\x88\x5d\x8d\xc6\xdf\xd3\xdd\x28\x16\x6d\x22\xa0\xbd\xd9\xdb\x6c\xaf\x6b\xe1\xf5\xaf\xfb\xbf\x5e\x9c\x9d\x1f\x9e\xc6\x3e\xa1\xb7\xd9\x36\x17\x4e\xa7\x7f\x33\x33\xdd\xd6\xa2\xda\xf7\x67\x5b\x8c\x6f\xf5\x16\x24\xec\xed\x30\xac\x86\x67\xce\xaf\x9d\xc1\xb6\x3b\x9b\xca\xab\x3e\x72\x32\x27\xc7\xe3\x3f\x14\xde\x5e\x25\x84\x15\x63\xfc\x5c\xe7\x51\xcf\xc5\x25\x5f\x6e\x53\x71\x33\x19\x88\x13\xff\xdd\xd5\xd6\xe4\x4b\x70\xb0\xb3\x8f\x5a\x6b\xff\x1f\x00\x00\xff\xff\x02\xee\xc6\x8f\x1b\x7e\x00\x00")

func fleetManagerYamlBytes() ([]byte, error) {
	return bindataRead(
		_fleetManagerYaml,
		"fleet-manager.yaml",
	)
}

func fleetManagerYaml() (*asset, error) {
	bytes, err := fleetManagerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "fleet-manager.yaml", size: 32283, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"fleet-manager.yaml": fleetManagerYaml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"fleet-manager.yaml": &bintree{fleetManagerYaml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
