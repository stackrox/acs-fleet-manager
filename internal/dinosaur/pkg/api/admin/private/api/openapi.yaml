openapi: 3.0.0
info:
  description: Red Hat Advanced Cluster Security (RHACS) Service Fleet Manager Admin
    APIs that can be used by RHACS Managed Service Operations Team.
  title: Red Hat Advanced Cluster Security Service Fleet Manager Admin API
  version: 0.0.3
servers:
- description: Main (production) server
  url: https://api.openshift.com
- description: Staging server
  url: https://api.stage.openshift.com
- description: localhost
  url: http://localhost:8000
- description: current domain
  url: /
tags:
- name: Admin APIs
paths:
  /api/rhacs/v1/admin/centrals:
    get:
      operationId: getCentrals
      parameters:
      - description: Page index
        examples:
          page:
            value: "1"
        in: query
        name: page
        required: false
        schema:
          type: string
      - description: Number of items in each page
        examples:
          size:
            value: "100"
        in: query
        name: size
        required: false
        schema:
          type: string
      - description: |-
          Specifies the order by criteria. The syntax of this parameter is
          similar to the syntax of the `order by` clause of an SQL statement.
          Each query can be ordered by any of the following `centralRequests` fields:

          * centralUIURL
          * centralDataURL
          * cloud_provider
          * cluster_id
          * created_at
          * href
          * id
          * instance_type
          * multi_az
          * name
          * organisation_id
          * owner
          * region
          * status
          * updated_at
          * version

          For example, to return all Central instances ordered by their name, use the following syntax:

          ```sql
          name asc
          ```

          To return all Central instances ordered by their name _and_ created date, use the following syntax:

          ```sql
          name asc, created_at asc
          ```

          If the parameter isn't provided, or if the value is empty, then
          the results are ordered by name.
        examples:
          orderBy:
            value: name asc
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: |
          Search criteria.

          The syntax of this parameter is similar to the syntax of the `where` clause of an
          SQL statement. Allowed fields in the search are `cloud_provider`, `name`, `owner`, `region`, and `status`. Allowed comparators are `<>`, `=`, or `LIKE`.
          Allowed joins are `AND` and `OR`. However, you can use a maximum of 10 joins in a search query.

          Examples:

          To return a Central instance with the name `my-central` and the region `aws`, use the following syntax:

          ```
          name = my-central and cloud_provider = aws
          ```[p-]

          To return a Central instance with a name that starts with `my`, use the following syntax:

          ```
          name like my%25
          ```

          If the parameter isn't provided, or if the value is empty, then all the Central instances
          that the user has permission to see are returned.

          Note. If the query is invalid, an error is returned.
        examples:
          search:
            value: name = my-central and cloud_provider = aws
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CentralList'
          description: Return a list of Central instances. This endpoint will return
            all Central instances that are stored in the database and the are not
            filtered based on user ids or org ids.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is invalid
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: User is not authorised to access the service
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error occurred
      security:
      - Bearer: []
      summary: Returns a list of Centrals
    post:
      description: |
        Creates a new Central that is owned by the user and organisation authenticated for the request.
        Each Central has a single owner organisation and a single owner user.
        This API allows providing custom resource settings for the new Central instance.
      operationId: createCentral
      parameters:
      - description: Perform the action in an asynchronous manner
        explode: true
        in: query
        name: async
        required: true
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CentralRequestPayload'
        description: Central data
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CentralRequest'
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Validation errors occurred
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is invalid
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: User forbidden either because the user is not authorized to
            access the service or because the maximum number of instances that can
            be created by this user has been reached.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The requested resource doesn't exist
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: A conflict has been detected in the creation of this resource
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: An unexpected error occurred while creating the Central request
      security:
      - Bearer: []
      summary: Creates a Central request
  /api/rhacs/v1/admin/centrals/{id}:
    delete:
      operationId: deleteCentralById
      parameters:
      - description: The ID of record
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Perform the action in an asynchronous manner
        explode: true
        in: query
        name: async
        required: true
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Central'
          description: Central updated by ID
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is invalid
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: User is not authorised to access the service
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: No Central found with the specified ID
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error occurred
      security:
      - Bearer: []
      summary: Delete a Central by ID
    get:
      operationId: getCentralById
      parameters:
      - description: The ID of record
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Central'
          description: Central found by ID
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is invalid
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: User is not authorised to access the service
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: No Central found with the specified ID
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error occurred
      security:
      - Bearer: []
      summary: Return the details of Central instance by ID
  /api/rhacs/v1/admin/centrals/{id}/expired-at:
    patch:
      operationId: updateCentralExpiredAtById
      parameters:
      - description: The ID of record
        in: path
        name: id
        required: true
        schema:
          type: string
      - explode: true
        in: query
        name: timestamp
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: reason
        required: true
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Central'
          description: Central updated by ID
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is invalid
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: User is not authorised to access the service
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: No Central found with the specified ID
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error occurred
      security:
      - Bearer: []
      summary: Update `expired_at` central property
  /api/rhacs/v1/admin/centrals/{id}/name:
    patch:
      operationId: updateCentralNameById
      parameters:
      - description: The ID of record
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CentralUpdateNameRequest'
        description: Options for patch operation
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Central'
          description: Central updated by ID
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is invalid
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: User is not authorised to access the service
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: No Central found with the specified ID
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error occurred
      security:
      - Bearer: []
      summary: Update `name` central property
  /api/rhacs/v1/admin/centrals/{id}/rotate-secrets:
    post:
      operationId: centralRotateSecrets
      parameters:
      - description: The ID of record
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CentralRotateSecretsRequest'
        description: Options for secret rotation
        required: true
      responses:
        "200":
          description: Secret successfully rotated
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is invalid
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: User is not authorised to access the service
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: No Central found with the specified ID or dynamic clients are
            not configured
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error occurred
      summary: Rotate RHSSO client or Secret Backup of a central tenant
  /api/rhacs/v1/admin/centrals/{id}/restore:
    post:
      parameters:
      - description: The ID of record
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "201":
          description: Requests to restore accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Validation error occured
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is invalid
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: User is not authorised to access the service
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: No Central found with the specified ID
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error occurred
      summary: Restore a central tenant that was already deleted
  /api/rhacs/v1/admin/centrals/{id}/billing:
    patch:
      operationId: changeBillingParameters
      parameters:
      - description: The ID of record
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CentralBillingChangeRequest'
        description: Billing target parameters
        required: true
      responses:
        "200":
          description: Billing parameters changed
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is invalid
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: User is not authorised to access the service
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: No Central found with the specified ID or dynamic clients are
            not configured
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error occurred
      summary: Change central billing parameters
  /api/rhacs/v1/admin/centrals/db/{id}:
    delete:
      operationId: deleteDbCentralById
      parameters:
      - description: The ID of record
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Central deleted by ID
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is invalid
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: User is not authorised to access the service
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: No Central found with the specified ID
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error occurred
      security:
      - Bearer: []
      summary: Delete a Central directly in the Database by ID
  /api/rhacs/v1/admin/centrals/{id}/traits:
    get:
      operationId: getCentralTraits
      parameters:
      - description: The ID of record
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: Central traits
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is invalid
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: User is not authorised to access the service
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: No Central found with the specified ID
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error occurred
      summary: Returns a list of central traits.
  /api/rhacs/v1/admin/centrals/{id}/traits/{trait}:
    delete:
      operationId: deleteCentralTrait
      parameters:
      - description: The ID of record
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: A central trait
        explode: false
        in: path
        name: trait
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Central trait deleted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is invalid
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: User is not authorised to access the service
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: No Central found with the specified ID
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error occurred
      summary: Deletes the central trait.
    get:
      operationId: getCentralTrait
      parameters:
      - description: The ID of record
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: A central trait
        explode: false
        in: path
        name: trait
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Trait exists.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is invalid
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: User is not authorised to access the service
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: No Central found with the specified ID or no such trait.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error occurred
      summary: Returns central trait status.
    put:
      operationId: putCentralTrait
      parameters:
      - description: The ID of record
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: A central trait
        explode: false
        in: path
        name: trait
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Trait has been added or already exists.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is invalid
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: User is not authorised to access the service
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: No Central found with the specified ID
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error occurred
      summary: Adds a trait to a central.
components:
  parameters:
    trait:
      description: A central trait
      explode: false
      in: path
      name: trait
      required: true
      schema:
        type: string
      style: simple
  schemas:
    Central:
      allOf:
      - $ref: '#/components/schemas/ObjectReference'
      - required:
        - central_operator_upgrading
        - central_upgrading
        - multi_az
      - $ref: '#/components/schemas/Central_allOf'
    CentralList:
      allOf:
      - $ref: '#/components/schemas/List'
      - $ref: '#/components/schemas/CentralList_allOf'
    CentralRotateSecretsRequest:
      example:
        reset_secret_backup: true
        rotate_rhsso_client_credentials: true
      properties:
        rotate_rhsso_client_credentials:
          type: boolean
        reset_secret_backup:
          type: boolean
      type: object
    CentralUpdateNameRequest:
      example:
        reason: reason
        name: name
      properties:
        name:
          type: string
        reason:
          type: string
      required:
      - name
      - reason
      type: object
    CentralBillingChangeRequest:
      example:
        cloud_account_id: cloud_account_id
        product: RHACS
        model: standard
        cloud_provider: cloud_provider
      properties:
        model:
          enum:
          - standard
          - marketplace
          - marketplace-aws
          - marketplace-gcp
          - marketplace-rhm
          - marketplace-azure
          type: string
        cloud_account_id:
          type: string
        cloud_provider:
          type: string
        product:
          enum:
          - RHACS
          type: string
      type: object
    Error:
      allOf:
      - $ref: '#/components/schemas/ObjectReference'
      - $ref: '#/components/schemas/Error_allOf'
    ObjectReference:
      properties:
        id:
          type: string
        kind:
          type: string
        href:
          type: string
      type: object
    CentralRequestPayload:
      description: Schema for the request body sent to /centrals POST
      example:
        cloud_account_id: cloud_account_id
        multi_az: true
        name: name
        cloud_provider: cloud_provider
        region: region
      properties:
        cloud_provider:
          description: The cloud provider where the Central component will be created
            in
          type: string
        cloud_account_id:
          description: The cloud account ID that is linked to the ACS instance
          type: string
        multi_az:
          description: Set this to true to configure the Central component to be multiAZ
          type: boolean
        name:
          description: The name of the Central component. It must consist of lower-case
            alphanumeric characters or '-', start with an alphabetic character, and
            end with an alphanumeric character, and can not be longer than 32 characters.
          type: string
        region:
          description: The region where the Central component cluster will be created
            in
          type: string
      required:
      - name
      type: object
    CentralRequest:
      allOf:
      - $ref: '#/components/schemas/ObjectReference'
      - $ref: '#/components/schemas/CentralRequest_allOf'
    List:
      properties:
        kind:
          type: string
        page:
          type: integer
        size:
          type: integer
        total:
          type: integer
      required:
      - items
      - kind
      - page
      - size
      - total
      type: object
    Central_allOf_routes:
      properties:
        domain:
          type: string
        router:
          type: string
    Central_allOf:
      properties:
        status:
          description: 'Values: [accepted, preparing, provisioning, ready, failed,
            deprovision, deleting] '
          type: string
        cloud_provider:
          description: Name of Cloud used to deploy. For example AWS
          type: string
        multi_az:
          type: boolean
        region:
          description: 'Values will be regions of specific cloud provider. For example:
            us-east-1 for AWS'
          type: string
        owner:
          type: string
        name:
          type: string
        host:
          type: string
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
        expired_at:
          format: date-time
          nullable: true
          type: string
        failed_reason:
          type: string
        organisation_id:
          type: string
        subscription_id:
          type: string
        owner_account_id:
          type: string
        account_number:
          type: string
        instance_type:
          type: string
        quota_type:
          type: string
        routes:
          items:
            $ref: '#/components/schemas/Central_allOf_routes'
          type: array
        routes_created:
          type: boolean
        cluster_id:
          type: string
        namespace:
          type: string
        traits:
          items:
            type: string
          type: array
    CentralList_allOf:
      properties:
        items:
          items:
            allOf:
            - $ref: '#/components/schemas/Central'
          type: array
    Error_allOf:
      properties:
        code:
          type: string
        reason:
          type: string
        operation_id:
          type: string
    CentralRequest_allOf:
      example: '{"$ref":"#/components/examples/CentralRequestExample"}'
      properties:
        status:
          description: 'Values: [accepted, preparing, provisioning, ready, failed,
            deprovision, deleting] '
          type: string
        cloud_provider:
          description: Name of Cloud used to deploy. For example AWS
          type: string
        cloud_account_id:
          description: Cloud Account ID
          type: string
        multi_az:
          type: boolean
        region:
          description: 'Values will be regions of specific cloud provider. For example:
            us-east-1 for AWS'
          type: string
        owner:
          type: string
        name:
          type: string
        centralUIURL:
          type: string
        centralDataURL:
          type: string
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
        failed_reason:
          type: string
        version:
          type: string
        instance_type:
          type: string
        traits:
          items:
            type: string
          type: array
      required:
      - multi_az
  securitySchemes:
    Bearer:
      bearerFormat: JWT
      scheme: bearer
      type: http
