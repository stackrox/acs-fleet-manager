openapi: 3.0.0
info:
  description: Red Hat Advanced Cluster Security (RHACS) Service Fleet Manager APIs
    that are used by internal services e.g fleetshard operators.
  title: Red Hat Advanced Cluster Security Service Fleet Manager
  version: 1.4.0
servers:
- description: Main (production) server
  url: https://api.openshift.com
- description: Staging server
  url: https://api.stage.openshift.com
- description: localhost
  url: http://localhost:8000
- description: current domain
  url: /
tags:
- name: Agent Clusters
paths:
  /api/rhacs/v1/agent-clusters/{id}/status:
    put:
      operationId: updateAgentClusterStatus
      parameters:
      - description: The ID of record
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataPlaneClusterUpdateStatusRequest'
        description: Cluster status update data
        required: true
      responses:
        "200":
          description: Cluster status is updated
        "400":
          content:
            application/json:
              examples:
                "400InvalidIdExample":
                  $ref: '#/components/examples/400InvalidIdExample'
              schema:
                $ref: '#/components/schemas/Error'
          description: id value is not valid
        "404":
          content:
            application/json:
              examples:
                "404Example":
                  $ref: '#/components/examples/404Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is not valid.
      security:
      - Bearer: []
      summary: Update the status of an agent cluster
      tags:
      - Agent Clusters
  /api/rhacs/v1/agent-clusters/{id}/centrals/status:
    put:
      operationId: updateCentralClusterStatus
      parameters:
      - description: The ID of record
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataPlaneCentralStatusUpdateRequest'
        description: Centrals status update data
        required: true
      responses:
        "200":
          description: Status is updated for Centrals
        "400":
          content:
            application/json:
              examples:
                "400InvalidIdExample":
                  $ref: '#/components/examples/400InvalidIdExample'
              schema:
                $ref: '#/components/schemas/Error'
          description: id value is not valid
        "404":
          content:
            application/json:
              examples:
                "404Example":
                  $ref: '#/components/examples/404Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is not valid.
      security:
      - Bearer: []
      summary: Update the status of Centrals on an agent cluster
      tags:
      - Agent Clusters
  /api/rhacs/v1/agent-clusters/{id}/centrals:
    get:
      operationId: getCentrals
      parameters:
      - description: The ID of record
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedCentralList'
          description: The list of the ManagedCentrals for the specified agent cluster
        "400":
          content:
            application/json:
              examples:
                "400InvalidIdExample":
                  $ref: '#/components/examples/400InvalidIdExample'
              schema:
                $ref: '#/components/schemas/Error'
          description: id value is not valid
        "404":
          content:
            application/json:
              examples:
                "404Example":
                  $ref: '#/components/examples/404Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is not valid.
      security:
      - Bearer: []
      summary: Get the list of ManagedCentrals for the specified agent cluster
      tags:
      - Agent Clusters
  /api/rhacs/v1/agent-clusters/centrals/{id}:
    get:
      operationId: getCentral
      parameters:
      - description: The ID of record
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedCentral'
          description: The ManagedCentrals with centralId for the specified agent
            cluster
        "400":
          content:
            application/json:
              examples:
                "400InvalidIdExample":
                  $ref: '#/components/examples/400InvalidIdExample'
              schema:
                $ref: '#/components/schemas/Error'
          description: id value is not valid
        "404":
          content:
            application/json:
              examples:
                "404Example":
                  $ref: '#/components/examples/404Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is not valid.
      security:
      - Bearer: []
      summary: Get the ManagedaCentral for the specified agent cluster and centralId
      tags:
      - Agent Clusters
  /api/rhacs/v1/agent-clusters/{id}:
    get:
      operationId: getDataPlaneClusterAgentConfig
      parameters:
      - description: The ID of record
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataplaneClusterAgentConfig'
          description: The Data Plane Cluster Agent configuration
        "400":
          content:
            application/json:
              examples:
                "400InvalidIdExample":
                  $ref: '#/components/examples/400InvalidIdExample'
              schema:
                $ref: '#/components/schemas/Error'
          description: id value is not valid
        "404":
          content:
            application/json:
              examples:
                "404Example":
                  $ref: '#/components/examples/404Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is not valid.
      security:
      - Bearer: []
      summary: Get the data plane cluster agent configuration
      tags:
      - Agent Clusters
components:
  examples:
    ManagedCentralExample:
      value:
        id: a3a9c5b9-0283-4ff8-9b9e-da2209da17c3
        kind: ManagedCentral
        metadata:
          name: example-central
          namespace: example-central-a3a9c5b9-0283-4ff8-9b9e-da2209da17c3
          annotations:
            mas/id: a3a9c5b9-0283-4ff8-9b9e-da2209da17c3
            mas/placementId: ""
          deletionTimestamp: 2022-06-01T11:04:09Z
        spec:
          owners:
          - central-owner1
          auth:
            clientSecret: ""
            clientId: client-id
            clientOrigin: shared_static_rhsso
            ownerUserId: f:ac4bcdb5-1fb1-41c5-9323-349698b9b757:username
            orgId: "13442309"
            issuer: https://sso.stage.redhat.com/auth/realms/redhat-external
          endpoint:
            host: example-central--rfpsqbvq-em-u-u-z--ymjcwac.example.central.com
            tls:
              cert: ""
              key: ""
          central:
            resources:
              requests:
                cpu: 250m
                memory: 250Mi
              limtis:
                cpu: 1000m
                memory: 4Gi
          scanner:
            analyzer:
              scaling:
                autoScaling: enabled
                replicas: 1
                minReplicas: 1
                maxReplicas: 3
              resources:
                requests:
                  cpu: 250m
                  memory: 100Mi
                limtis:
                  cpu: 500m
                  memory: 2500Mi
          db:
            host: dbhost.rhacs-psql-instance
    RHACSOperatorConfigExample:
      value:
        gitRef: 4.1.1
        image: quay.io/rhacs-eng/stackrox-operator@sha256:9f86d081884c7d659a2feaa0c55ad015a3bf4f1b2b0b822cd15d6c15b0f00a08
        helmValues: |
          operator:
            resources:
              limits:
                cpu: 100m
    DataPlaneCentralStatusRequestExample:
      value:
        conditions:
        - type: Ready
          reason: CentralInstanceReady
          message: installing
          status: "False"
          lastTransitionTime: 2018-01-01T00:00:00Z
    "400InvalidIdExample":
      value:
        id: "21"
        kind: Error
        href: /api/rhacs/v1/errors/21
        code: RHACS-MGMT-21
        reason: Bad request
        operation_id: 1lWDGuybIrEnxrAem724gqkkiDv
    "404Example":
      value:
        id: "7"
        kind: Error
        href: /api/rhacs/v1/errors/7
        code: RHACS-MGMT-7
        reason: The requested resource doesn't exist
  schemas:
    ListReference:
      properties:
        kind:
          type: string
      required:
      - items
      - kind
      type: object
    PrivateObjectReference:
      properties:
        id:
          type: string
        kind:
          type: string
      type: object
    ManagedCentral:
      allOf:
      - $ref: '#/components/schemas/PrivateObjectReference'
      - $ref: '#/components/schemas/ManagedCentral_allOf'
    ManagedCentralList:
      allOf:
      - $ref: '#/components/schemas/ListReference'
      - $ref: '#/components/schemas/ManagedCentralList_allOf'
      description: A list of ManagedCentral
    VerticalPodAutoscaling:
      properties:
        recommenders:
          items:
            $ref: '#/components/schemas/VPARecommenderConfig'
          type: array
      type: object
    LocalObjectReference:
      properties:
        name:
          type: string
      type: object
    ResourceList:
      additionalProperties:
        type: string
      type: object
    ResourceRequirements:
      properties:
        requests:
          additionalProperties:
            type: string
          type: object
        limits:
          additionalProperties:
            type: string
          type: object
      type: object
    Toleration:
      properties:
        key:
          type: string
        operator:
          enum:
          - Exists
          - Equal
          type: string
        value:
          type: string
        effect:
          enum:
          - NoSchedule
          - PreferNoSchedule
          - NoExecute
          type: string
        tolerationSeconds:
          format: int64
          nullable: true
          type: integer
      type: object
    PodNodeSelector:
      additionalProperties:
        type: string
      type: object
    VPARecommenderConfig:
      properties:
        name:
          type: string
        image:
          type: string
        imagePullSecrets:
          items:
            $ref: '#/components/schemas/LocalObjectReference'
          type: array
        resources:
          $ref: '#/components/schemas/ResourceRequirements'
        recommendationMarginFraction:
          format: float
          type: number
        podRecommendationMinCpuMillicores:
          format: float
          type: number
        podRecommendationMinMemoryMb:
          format: float
          type: number
        targetCpuPercentile:
          format: float
          type: number
        recommendationLowerBoundCpuPercentile:
          format: float
          type: number
        recommendationUpperBoundCpuPercentile:
          format: float
          type: number
        targetMemoryPercentile:
          format: float
          type: number
        recommendationLowerBoundMemoryPercentile:
          format: float
          type: number
        recommendationUpperBoundMemoryPercentile:
          format: float
          type: number
        checkpointsTimeout:
          type: string
        minCheckpoints:
          type: integer
        memorySaver:
          type: boolean
        recommenderInterval:
          type: string
        checkpointsGcInterval:
          type: string
        prometheusAddress:
          type: string
        prometheusCadvisorJobName:
          type: string
        address:
          type: string
        kubeconfig:
          type: string
        kubeApiQps:
          format: float
          type: number
        kubeApiBurst:
          type: integer
        storage:
          type: string
        historyLength:
          type: string
        historyResolution:
          type: string
        prometheusQueryTimeout:
          type: string
        podLabelPrefix:
          type: string
        metricForPodLabels:
          type: string
        podNamespaceLabel:
          type: string
        podNameLabel:
          type: string
        containerNamespaceLabel:
          type: string
        containerPodNameLabel:
          type: string
        containerNameLabel:
          type: string
        vpaObjectNamespace:
          type: string
        memoryAggregationInterval:
          type: string
        memoryAggregationIntervalCount:
          type: integer
        memoryHistogramDecayHalfLife:
          type: string
        cpuHistogramDecayHalfLife:
          type: string
        cpuIntegerPostProcessorEnabled:
          type: boolean
        useExternalMetrics:
          type: boolean
        externalMetricsCpuMetric:
          type: string
        externalMetricsMemoryMetric:
          type: string
        oomBumpUpRatio:
          format: float64
          type: number
        oomMinBumpUpBytes:
          format: float64
          type: number
        tolerations:
          items:
            $ref: '#/components/schemas/Toleration'
          type: array
        nodeSelector:
          additionalProperties:
            type: string
          type: object
        useProxy:
          type: boolean
        proxyImage:
          type: string
        logLevel:
          type: number
      required:
      - name
      type: object
    RHACSOperatorConfigs:
      properties:
        CrdUrls:
          items:
            type: string
          type: array
        RHACSOperatorConfigs:
          items:
            type: object
          type: array
    DataPlaneClusterUpdateStatusRequest:
      description: Schema for the request to update a data plane cluster's status
      example:
        addons:
        - packageImage: packageImage
          parametersSHA256Sum: parametersSHA256Sum
          id: id
          sourceImage: sourceImage
          version: version
        - packageImage: packageImage
          parametersSHA256Sum: parametersSHA256Sum
          id: id
          sourceImage: sourceImage
          version: version
      properties:
        addons:
          items:
            $ref: '#/components/schemas/DataPlaneClusterUpdateStatusRequest_addons'
          type: array
      type: object
    DataPlaneCentralStatus:
      description: Schema of the status object for a Central
      example:
        $ref: '#/components/examples/DataPlaneCentralStatusRequestExample'
      properties:
        conditions:
          description: The status conditions of a Central
          items:
            $ref: '#/components/schemas/DataPlaneCentralStatus_conditions'
          type: array
        routes:
          description: Routes created for a Central
          items:
            $ref: '#/components/schemas/DataPlaneCentralStatus_routes'
          type: array
        secrets:
          additionalProperties:
            type: string
          description: Map of Secrets created for a Central
          type: object
      type: object
    DataPlaneCentralStatusUpdateRequest:
      additionalProperties:
        $ref: '#/components/schemas/DataPlaneCentralStatus'
      description: Schema for the request to update the statuses of Central clusters
        from data plane
      type: object
    DataplaneClusterAgentConfig:
      description: Configuration for the data plane cluster agent
      example:
        spec:
          observability:
            channel: channel
            tag: tag
            accessToken: accessToken
            repository: repository
      properties:
        spec:
          $ref: '#/components/schemas/DataplaneClusterAgentConfig_spec'
      type: object
    Error:
      allOf:
      - $ref: '#/components/schemas/ObjectReference'
      - $ref: '#/components/schemas/Error_allOf'
    ObjectReference:
      properties:
        id:
          type: string
        kind:
          type: string
        href:
          type: string
      type: object
    ManagedCentral_allOf_metadata_annotations:
      properties:
        mas/id:
          type: string
        mas/placementId:
          type: string
      required:
      - mas/id
      - mas/placementId
    ManagedCentral_allOf_metadata:
      properties:
        name:
          type: string
        namespace:
          type: string
        internal:
          type: boolean
        annotations:
          $ref: '#/components/schemas/ManagedCentral_allOf_metadata_annotations'
        deletionTimestamp:
          type: string
        secretsStored:
          items:
            type: string
          type: array
        secrets:
          additionalProperties:
            type: string
          type: object
        expired-at:
          format: date-time
          nullable: true
          type: string
    ManagedCentral_allOf_spec_auth:
      properties:
        clientSecret:
          type: string
        clientId:
          type: string
        clientOrigin:
          type: string
        ownerUserId:
          type: string
        ownerAlternateUserId:
          type: string
        ownerOrgId:
          type: string
        ownerOrgName:
          type: string
        issuer:
          type: string
    ManagedCentral_allOf_spec_additionalAuthProvider_groups:
      properties:
        key:
          type: string
        value:
          type: string
        role:
          type: string
    ManagedCentral_allOf_spec_additionalAuthProvider_requiredAttributes:
      properties:
        key:
          type: string
        value:
          type: string
    ManagedCentral_allOf_spec_additionalAuthProvider_oidc:
      properties:
        issuer:
          type: string
        callbackMode:
          type: string
        clientID:
          type: string
        clientSecret:
          type: string
        disableOfflineAccessScope:
          type: boolean
    ManagedCentral_allOf_spec_additionalAuthProvider:
      properties:
        name:
          type: string
        minimumRoleName:
          type: string
        groups:
          items:
            $ref: '#/components/schemas/ManagedCentral_allOf_spec_additionalAuthProvider_groups'
          type: array
        requiredAttributes:
          items:
            $ref: '#/components/schemas/ManagedCentral_allOf_spec_additionalAuthProvider_requiredAttributes'
          type: array
        claimMappings:
          items:
            $ref: '#/components/schemas/ManagedCentral_allOf_spec_additionalAuthProvider_requiredAttributes'
          type: array
        oidc:
          $ref: '#/components/schemas/ManagedCentral_allOf_spec_additionalAuthProvider_oidc'
    ManagedCentral_allOf_spec_uiEndpoint_tls:
      properties:
        cert:
          type: string
        key:
          type: string
    ManagedCentral_allOf_spec_uiEndpoint:
      description: Handles GUI/CLI/API connections
      properties:
        host:
          type: string
        tls:
          $ref: '#/components/schemas/ManagedCentral_allOf_spec_uiEndpoint_tls'
    ManagedCentral_allOf_spec_dataEndpoint:
      description: Handles Sensor connections
      properties:
        host:
          type: string
    ManagedCentral_allOf_spec:
      properties:
        instanceType:
          enum:
          - eval
          - standard
          type: string
        tenantResourcesValues:
          type: object
        centralCRYAML:
          type: string
        owners:
          items:
            type: string
          type: array
        auth:
          $ref: '#/components/schemas/ManagedCentral_allOf_spec_auth'
        additionalAuthProvider:
          $ref: '#/components/schemas/ManagedCentral_allOf_spec_additionalAuthProvider'
        uiEndpoint:
          $ref: '#/components/schemas/ManagedCentral_allOf_spec_uiEndpoint'
        dataEndpoint:
          $ref: '#/components/schemas/ManagedCentral_allOf_spec_dataEndpoint'
    ManagedCentral_allOf:
      properties:
        metadata:
          $ref: '#/components/schemas/ManagedCentral_allOf_metadata'
        spec:
          $ref: '#/components/schemas/ManagedCentral_allOf_spec'
        requestStatus:
          type: string
    ManagedCentralList_allOf:
      example: '{"kind":"ManagedCentralList","items":{"$ref":"#/components/examples/ManagedCentralExample"}}'
      properties:
        items:
          items:
            allOf:
            - $ref: '#/components/schemas/ManagedCentral'
          type: array
        rhacs_operators:
          $ref: '#/components/schemas/RHACSOperatorConfigs'
        verticalPodAutoscaling:
          $ref: '#/components/schemas/VerticalPodAutoscaling'
    DataPlaneClusterUpdateStatusRequest_addons:
      example:
        packageImage: packageImage
        parametersSHA256Sum: parametersSHA256Sum
        id: id
        sourceImage: sourceImage
        version: version
      properties:
        id:
          type: string
        version:
          type: string
        sourceImage:
          type: string
        packageImage:
          type: string
        parametersSHA256Sum:
          type: string
    DataPlaneCentralStatus_conditions:
      properties:
        type:
          type: string
        reason:
          type: string
        message:
          type: string
        status:
          type: string
    DataPlaneCentralStatus_routes:
      properties:
        domain:
          type: string
        router:
          type: string
    DataplaneClusterAgentConfig_spec_observability:
      description: Observability configurations
      example:
        channel: channel
        tag: tag
        accessToken: accessToken
        repository: repository
      properties:
        accessToken:
          nullable: true
          type: string
        channel:
          type: string
        repository:
          type: string
        tag:
          type: string
    DataplaneClusterAgentConfig_spec:
      description: Data plane cluster agent spec
      example:
        observability:
          channel: channel
          tag: tag
          accessToken: accessToken
          repository: repository
      properties:
        observability:
          $ref: '#/components/schemas/DataplaneClusterAgentConfig_spec_observability'
    Error_allOf:
      properties:
        code:
          type: string
        reason:
          type: string
        operation_id:
          type: string
  securitySchemes:
    Bearer:
      bearerFormat: JWT
      scheme: bearer
      type: http
