# Default values for rhacs-terraform.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

fleetshardSync:
  image: "quay.io/app-sre/acs-fleet-manager:main"
  # Can be either OCM, RHSSO, STATIC_TOKEN. When choosing RHSSO, make sure the clientId/secret is set. By default, uses OCM.
  authType: "OCM"
  # OCM refresh token, only required in combination with authType=OCM.
  ocmToken: ""
  fleetManagerEndpoint: ""
  clusterId: ""
  # Flag controlling whether tenant's sso.redhat.com auth provider will be initialised by fleetshard-sync.
  # Currently this functionality is supported only when fleetshard-sync is deployed in the same k8s cluster as tenant.
  createAuthProvider: true
  # Static token, only required in combination with authType=STATIC_TOKEN. A sample static token can be found
  # within Bitwarden (ACS Fleet* static token).
  staticToken: ""
  # Red Hat SSO secrets, only required in combination with authType=RHSSO. The client credentials can be found within
  # Bitwarden (ACS RH SSO Fleet* serviceaccount).
  redHatSSO:
    clientId: ""
    clientSecret: ""
  # Will be created when the auth type RHSSO is used. It will handle obtaining access tokens and storing those within a
  # shared volume of token-refresher and fleetshard-sync.
  tokenRefresher:
    image: "quay.io/rhoas/mk-token-refresher:latest"
    issuerUrl: "https://sso.redhat.com/auth/realms/redhat-external"

acsOperator:
  enabled: false
  source: redhat-operators
  sourceNamespace: openshift-marketplace
  startingCSV: rhacs-operator.v3.70.0

# See available parameters in charts/observability/values.yaml
# - enabled flag is used to completely enable/disable observability sub-chart
observability:
  enabled: true
  github:
    accessToken: ""
    repository: ""
  observatorium:
    gateway: ""
    metricsClientId: ""
    metricsSecret: ""
  pagerduty:
    key: ""

# See available parameters in charts/logging/values.yaml
# - enabled flag is used to completely enable/disable logging sub-chart
logging:
  enabled: true
  aws:
    accessKeyId: ""
    secretAccessKey: ""
