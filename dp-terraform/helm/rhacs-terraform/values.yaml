# Default values for rhacs-terraform.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

fleetshardSync:
  image:
    # can be either a full image reference represented by `ref` or a combination of `repo:tag`. `ref` has a higher priority (if set).
    ref: ""
    repo: "quay.io/redhat-services-prod/acscs-rhacs-tenant/acscs-main/acs-fleet-manager"
    tag: null
  # Can be either STATIC_TOKEN or SERVICE_ACCOUNT_TOKEN. By default, uses SERVICE_ACCOUNT_TOKEN.
  authType: "SERVICE_ACCOUNT_TOKEN"
  # OCM refresh token, only required in combination with authType=OCM.
  ocmToken: ""
  fleetManagerEndpoint: ""
  clusterId: ""
  clusterName: ""
  environment: ""
  # Flag controlling whether tenant's sso.redhat.com auth provider will be initialised by fleetshard-sync.
  # Currently, this functionality is supported only when fleetshard-sync is deployed in the same k8s cluster as tenant.
  createAuthProvider: true
  # Static token, only required in combination with authType=STATIC_TOKEN.
  # Static token can be issued by the kubernetes issuer with the following command:
  # $ kubectl create token -n rhacs fleetshard-sync --audience acs-fleet-manager-private-api
  staticToken: ""
  auditLogs:
    enabled: true
    skipTLSVerify: true
  managedDB:
    enabled: true
    subnetGroup: ""
    securityGroup: ""
    performanceInsights: true
    sharedTags: []
  secretEncryption:
    type: kms # local or kms
    keyID: ""
  aws:
    region: "us-east-1" # TODO(2023-05-01): Remove the default value here as we now set it explicitly
    enableTokenAuth: true
  telemetry:
    storage:
      endpoint: ""
  resources:
    requests:
      cpu: "500m"
      memory: "512Mi"
    limits:
      cpu: "500m"
      memory: "512Mi"
  gitops:
    enabled: false
    tenantDefaultAppSourceRepoUrl: ""
    tenantDefaultAppSourceTargetRevision: ""
    tenantDefaultAppSourcePath: ""
  targetedOperatorUpgrades:
    enabled: false
  affinity: {}
  nodeSelector:
    node-role.kubernetes.io/acscs-infra: ""
  tolerations:
    - key: node-role.kubernetes.io/acscs-infra
      operator: Exists
      effect: NoSchedule
  addonAutoUpgradeEnabled: true
  addonName: acs-fleetshard
  tenantImagePullSecret:
    name: ""
    key: .dockerconfigjson
    create: false
  printCentralUpdateDiff: false
  argoCdNamespace: openshift-gitops

# Email sender service parameters
# - enabled flag is used to completely enable/disable email sender service
emailsender:
  enabled: false
  # Use this in case you apply this manifest against a cluster without service-ca operator
  # to turn of HTTPS and mounting the service-ca certs since they'll not be created
  db:
    sslMode: "verify-full"
    caCertFile: /rds_ca/aws-rds-ca-global-bundle.pem
  enableHTTPS: true
  replicas: 3
  image:
    repo: "quay.io/redhat-services-prod/acscs-rhacs-tenant/acscs-main/acs-emailsender"
    tag: null
  clusterId: ""
  clusterName: ""
  environment: ""
  senderAddress: "noreply@mail.rhacs-dev.com"
  authConfigFromKubernetes: true
  emailProvider: "AWS_SES"
  resources:
    requests:
      cpu: "100m"
      memory: "512Mi"
    limits:
      cpu: "200m"
      memory: "512Mi"

global:
  image:
    tag: "latest"
  createExternalSecrets: true
  secretStore:
    aws:
      secretsManagerSecretStoreName: secrets-manager-secret-store # pragma: allowlist secret
      parameterStoreSecretStoreName: parameter-store-secret-store # pragma: allowlist secret
