apiVersion: apps/v1
kind: Deployment
metadata:
  name: fleetshard-sync
  namespace: {{ .Release.Namespace }}
  labels:
    app: fleetshard-sync
    managed-service.rhacs.redhat.com/update-trigger: {{ now | date "20060102150405" | quote }}
    managed-service.rhacs.redhat.com/git-commit-sha: {{ .Values.fleetshardSync.gitCommitSHA }}
    managed-service.rhacs.redhat.com/git-describe-tag: {{ .Values.fleetshardSync.gitDescribeTag }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fleetshard-sync
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: fleetshard-sync
    spec:
      serviceAccountName: fleetshard-sync
      containers:
      - name: fleetshard-sync
        image: {{ .Values.fleetshardSync.image | quote }}
        imagePullPolicy: Always
        command:
        - /usr/local/bin/fleetshard-sync
        env:
        - name: OCM_TOKEN
          value: {{ .Values.fleetshardSync.ocmToken }}
        - name: FLEET_MANAGER_ENDPOINT
          value: {{ .Values.fleetshardSync.fleetManagerEndpoint }}
        - name: CLUSTER_ID
          value: {{ .Values.fleetshardSync.clusterId }}
        - name: CREATE_AUTH_PROVIDER
          value: "{{ .Values.fleetshardSync.createAuthProvider }}"
        - name: AUTH_TYPE
          value: {{ .Values.fleetshardSync.authType }}
        - name: STATIC_TOKEN
          value: {{ .Values.fleetshardSync.staticToken }}
        - name: EGRESS_PROXY_IMAGE
          value: {{ .Values.fleetshardSync.egressProxy.image | quote }}
        ports:
        - name: monitoring
          containerPort: 8080
      {{- if and .Values.fleetshardSync.redHatSSO.clientId .Values.fleetshardSync.redHatSSO.clientSecret (eq .Values.fleetshardSync.authType "RHSSO") }}
        volumeMounts:
          - mountPath: /run/secrets/rhsso-token
            name: rhsso-token
            readOnly: true
      - name: token-refresher
        image: {{ .Values.fleetshardSync.tokenRefresher.image }}
        imagePullPolicy: Always
        env:
          - name: CLIENT_ID
            valueFrom:
              secretKeyRef:
                name: fleetshard-sync-rhsso-creds
                key: clientId
          - name: CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                name: fleetshard-sync-rhsso-creds
                key: clientSecret
          - name: ISSUER_URL
            value: {{ .Values.fleetshardSync.tokenRefresher.issuerUrl }}
        command:
          - /bin/token-refresher
          - --oidc.client-id=$(CLIENT_ID)
          - --oidc.client-secret=$(CLIENT_SECRET)
          - --oidc.issuer-url=$(ISSUER_URL)
          - --margin=1m
          - --file=/rhsso-token/token
        volumeMounts:
          - mountPath: /rhsso-token
            name: rhsso-token
      volumes:
        - name: rhsso-token
          emptyDir: {}
      {{- end }}
---
{{- if and .Values.fleetshardSync.redHatSSO.clientId .Values.fleetshardSync.redHatSSO.clientSecret }}
apiVersion: v1
kind: Secret
metadata:
  name: fleetshard-sync-rhsso-creds
  namespace: {{ .Release.Namespace }}
  labels:
    app: fleetshard-sync
type: Opaque
data:
  clientId: {{ .Values.fleetshardSync.redHatSSO.clientId | b64enc | quote }}
  clientSecret: {{ .Values.fleetshardSync.redHatSSO.clientSecret | b64enc | quote }}
---
{{- end }}
