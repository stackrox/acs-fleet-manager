apiVersion: apps/v1
kind: Deployment
metadata:
  name: fleetshard-sync
  namespace: {{ .Release.Namespace }}
  labels:
    app: fleetshard-sync
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fleetshard-sync
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        rhacs.redhat.com/cluster-name: {{ .Values.fleetshardSync.clusterName | quote }}
        rhacs.redhat.com/environment: {{ .Values.fleetshardSync.environment | quote }}
      labels:
        app: fleetshard-sync
    spec:
      {{- if .Values.fleetshardSync.affinity }}
      affinity: {{ toYaml .Values.fleetshardSync.affinity | nindent 8 }}
      {{- end }}
      {{- if .Values.fleetshardSync.tolerations }}
      tolerations: {{ toYaml .Values.fleetshardSync.tolerations | nindent 8 }}
      {{- end }}
      {{- if .Values.fleetshardSync.nodeSelector }}
      nodeSelector: {{ toYaml .Values.fleetshardSync.nodeSelector | nindent 8 }}
      {{- end }}
      serviceAccountName: fleetshard-sync
      containers:
      - name: fleetshard-sync
        image: "{{ .Values.fleetshardSync.image.repo }}:{{ .Values.fleetshardSync.image.tag }}"
        imagePullPolicy: IfNotPresent
        command:
        - /usr/local/bin/fleetshard-sync
        env:
        - name: OCM_TOKEN
          value: {{ .Values.fleetshardSync.ocmToken }}
        - name: FLEET_MANAGER_ENDPOINT
          value: {{ .Values.fleetshardSync.fleetManagerEndpoint }}
        - name: CLUSTER_ID
          value: {{ .Values.fleetshardSync.clusterId }}
        - name: CLUSTER_NAME
          value: {{ .Values.fleetshardSync.clusterName }}
        - name: ENVIRONMENT
          value: {{ .Values.fleetshardSync.environment }}
        - name: CREATE_AUTH_PROVIDER
          value: "{{ .Values.fleetshardSync.createAuthProvider }}"
        - name: AUTH_TYPE
          value: {{ .Values.fleetshardSync.authType }}
        - name: STATIC_TOKEN
          value: {{ .Values.fleetshardSync.staticToken }}
        - name: EGRESS_PROXY_IMAGE
          value: {{ .Values.fleetshardSync.egressProxy.image | quote }}
        - name: SECURE_TENANT_NETWORK
          value: {{ .Values.fleetshardSync.secureTenantNetwork | quote }}
        {{- if eq "RHSSO" .Values.fleetshardSync.authType }}
        - name: RHSSO_SERVICE_ACCOUNT_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: fleetshard-sync
              key: "rhsso-service-account-client-id"
              optional: false
        - name: RHSSO_SERVICE_ACCOUNT_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: fleetshard-sync
              key: "rhsso-service-account-client-secret"
              optional: false
        - name: RHSSO_REALM
          value: {{ .Values.fleetshardSync.redHatSSO.realm }}
        - name: RHSSO_ENDPOINT
          value: {{ .Values.fleetshardSync.redHatSSO.endpoint }}
        {{- end }}
        - name: AUDIT_LOG_ENABLED
          value: {{ .Values.fleetshardSync.auditLogs.enabled | quote }}
        - name: AUDIT_LOG_SKIP_TLS_VERIFY
          value: {{ .Values.fleetshardSync.auditLogs.skipTLSVerify | quote }}
        - name: MANAGED_DB_ENABLED
          value: {{ .Values.fleetshardSync.managedDB.enabled | quote }}
        {{- if eq .Values.fleetshardSync.managedDB.enabled true }}
        - name: MANAGED_DB_SUBNET_GROUP
          value: {{ required "fleetshardSync.managedDB.subnetGroup is required when fleetshardSync.managedDB.enabled = true" .Values.fleetshardSync.managedDB.subnetGroup }}
        - name: MANAGED_DB_SECURITY_GROUP
          value: {{ required "fleetshardSync.managedDB.securityGroup is required when fleetshardSync.managedDB.enabled = true" .Values.fleetshardSync.managedDB.securityGroup }}
        - name: MANAGED_DB_PERFORMANCE_INSIGHTS
          value: {{ .Values.fleetshardSync.managedDB.performanceInsights | quote }}
        - name: SECRET_ENCRYPTION_TYPE
          value: {{ .Values.fleetshardSync.secretEncryption.type | quote }}
        - name: SECRET_ENCRYPTION_KEY_ID
          value: {{ .Values.fleetshardSync.secretEncryption.keyID | quote }}
        {{- end }}
        - name: AWS_REGION
          value: {{ .Values.fleetshardSync.aws.region }}
        - name: AWS_ROLE_ARN
          valueFrom:
            secretKeyRef:
              name: fleetshard-sync-parameters
              key: "aws-role-arn"
        - name: TELEMETRY_STORAGE_ENDPOINT
          value: {{ .Values.fleetshardSync.telemetry.storage.endpoint | quote }}
        - name: TELEMETRY_STORAGE_KEY
          valueFrom:
            secretKeyRef:
              name: fleetshard-sync
              key: "telemetry-storage-key"
        {{- if .Values.fleetshardSync.aws.enableTokenAuth }}
        - name: AWS_WEB_IDENTITY_TOKEN_FILE
          value: "/var/run/secrets/tokens/aws-token"
        {{- else }}
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: fleetshard-sync
              key: "aws-access-key-id"
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: fleetshard-sync
              key: "aws-secret-access-key"
        {{- end }}
        - name: RHACS_GITOPS_ENABLED
          value: {{ .Values.fleetshardSync.gitops.enabled | quote }}
        - name: RHACS_TARGETED_OPERATOR_UPGRADES
          value: {{ .Values.fleetshardSync.targetedOperatorUpgrades.enabled | quote }}
        - name: RHACS_ADDON_AUTO_UPGRADE
          value: {{ .Values.fleetshardSync.addonAutoUpgradeEnabled | quote }}
        - name: FLEETSHARD_ADDON_NAME
          value: {{ .Values.fleetshardSync.addonName | quote }}
        {{- if eq "SERVICE_ACCOUNT_TOKEN" .Values.fleetshardSync.authType }}
        - name: FLEET_MANAGER_TOKEN_FILE
          value: "/var/run/secrets/tokens/fleet-manager-token"
        {{- end }}
        volumeMounts:
          - mountPath: /var/run/secrets/tokens
            name: aws-token
            readOnly: true
          {{- if eq "SERVICE_ACCOUNT_TOKEN" .Values.fleetshardSync.authType }}
          - mountPath: /var/run/secrets/tokens
            name: fleet-manager-token
            readOnly: true
          {{- end }}
        ports:
        - name: monitoring
          containerPort: 8080
        resources:
          limits:
            cpu: {{ .Values.fleetshardSync.resources.limits.cpu | quote }}
            memory: {{ .Values.fleetshardSync.resources.limits.memory | quote }}
          requests:
            cpu: {{ .Values.fleetshardSync.resources.requests.cpu | quote }}
            memory: {{ .Values.fleetshardSync.resources.requests.memory | quote }}
      volumes:
        - name: aws-token
          projected:
            sources:
              - serviceAccountToken:
                  path: aws-token
                  audience: sts.amazonaws.com
                  expirationSeconds: 3600
        {{- if eq "SERVICE_ACCOUNT_TOKEN" .Values.fleetshardSync.authType }}
        - name: fleet-manager-token
          projected:
            sources:
              - serviceAccountToken:
                  path: fleet-manager-token
                  audience: acs-fleet-manager-private-api
                  expirationSeconds: 3600
        {{- end }}
