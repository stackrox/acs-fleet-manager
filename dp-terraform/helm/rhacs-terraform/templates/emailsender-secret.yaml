apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: emailsender-db-secret
  namespace: {{ .Release.Namespace }}
spec:
  secretStoreRef:
    name: {{ .Values.global.secretStore.aws.secretsManagerSecretStoreName }}
    kind: ClusterSecretStore
  target:
    name: emailsender-db
    creationPolicy: Owner
  data:
    - secretKey: db.user # pragma: allowlist secret
      remoteRef:
        key: "cluster-{{ .Values.emailsender.clusterName }}-emailsender-db"
        property: "username"
    - secretKey: db.name # pragma: allowlist secret
      remoteRef:
        key: "cluster-{{ .Values.emailsender.clusterName }}-emailsender-db"
        property: "databaseName"
    - secretKey: db.host # pragma: allowlist secret
      remoteRef:
        key: "cluster-{{ .Values.emailsender.clusterName }}-emailsender-db"
        property: "host"
    - secretKey: db.password # pragma: allowlist secret
      remoteRef:
        key: "cluster-{{ .Values.emailsender.clusterName }}-emailsender-db"
        property: "password" # pragma: allowlist secret
    - secretKey: db.port # pragma: allowlist secret
      remoteRef:
        key: "cluster-{{ .Values.emailsender.clusterName }}-emailsender-db"
        property: "port"
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: emailsender-ext-parameters
  namespace: {{ .Release.Namespace }}
spec:
  secretStoreRef:
    name: {{ .Values.global.secretStore.aws.parameterStoreSecretStoreName }}
    kind: ClusterSecretStore
  target:
    name: emailsender-parameters
    creationPolicy: Owner
  data:
    - secretKey: aws-role-arn # pragma: allowlist secret
      remoteRef:
        key: "/emailsender/aws_role_arn"
