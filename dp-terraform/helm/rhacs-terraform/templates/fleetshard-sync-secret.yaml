{{- if (index .Values "external-secrets" "enabled") }}
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: fleetshard-sync-ext-secret
  namespace: {{ .Release.Namespace }}
spec:
  secretStoreRef:
    name: {{ .Values.global.secretStore.aws.secretsManagerSecretStoreName }}
    kind: ClusterSecretStore
  target:
    name: fleetshard-sync
    creationPolicy: Owner
  data:
    - secretKey: telemetry-storage-key # pragma: allowlist secret
      remoteRef:
        key: "fleetshard-sync"
        property: "telemetry_storage_key"
    {{- if not .Values.fleetshardSync.aws.enableTokenAuth }}
    - secretKey: aws-access-key-id # pragma: allowlist secret
      remoteRef:
        key: "fleetshard-sync"
        property: "aws_access_key_id"
    - secretKey: aws-secret-access-key # pragma: allowlist secret
      remoteRef:
        key: "fleetshard-sync"
        property: "aws_secret_access_key"
    {{- end }}
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: fleetshard-sync-ext-parameters
  namespace: {{ .Release.Namespace }}
spec:
  secretStoreRef:
    name: {{ .Values.global.secretStore.aws.parameterStoreSecretStoreName }}
    kind: ClusterSecretStore
  target:
    name: fleetshard-sync-parameters
    creationPolicy: Owner
  data:
    - secretKey: aws-role-arn # pragma: allowlist secret
      remoteRef:
        key: "/fleetshard-sync/aws_role_arn"
{{- end }}
