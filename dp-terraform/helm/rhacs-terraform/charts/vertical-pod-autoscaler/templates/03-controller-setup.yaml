# When installing the VerticalPodAutoscaler, there is a singleton
# VerticalPodAutoscalerController that is created. It's not possible
# to manage this singleton via helm, so we deploy a pod that will
# patch it. It's setup to run as helm hook, so it will run after the
# install and upgrade hooks.

# This is a poor man's way to patch the singleton VerticalPodAutoscalerController

apiVersion: v1
kind: ServiceAccount
metadata:
  name: acscs-setup
  namespace: openshift-vertical-pod-autoscaler
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: acscs-setup
  namespace: openshift-vertical-pod-autoscaler
rules:
  - apiGroups: [ "autoscaling.openshift.io" ]
    resources: [ "verticalpodautoscalercontrollers" ]
    verbs: [ "get", "patch" ]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: acscs-setup
  namespace: openshift-vertical-pod-autoscaler
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: acscs-setup
subjects:
  - kind: ServiceAccount
    name: acscs-setup
    namespace: openshift-vertical-pod-autoscaler
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: acscs-setup
  namespace: openshift-vertical-pod-autoscaler
data:
  # apiVersion: autoscaling.openshift.io/v1
  # kind: VerticalPodAutoscalerController
  # metadata:
  #   name: default
  #   namespace: openshift-vertical-pod-autoscaler
  # spec:
  #   deploymentOverrides:
  #     admission:
  #       container:
  #         resources: {}
  #     recommender:
  #       container:
  #         resources: {}
  #     updater:
  #       container:
  #         resources: {}
  #   minReplicas: 2
  #   podMinCPUMillicores: 25
  #   podMinMemoryMb: 250
  #   recommendationOnly: false
  #   safetyMarginFraction: 0.15

  # By default, the VPA will only adjust pods that have at least 2 replicas.
  # Since we also want to manage Central, which has 1 replica, we need
  # to adjust this value.
  patch.json: |
    [
      {
        "op": "replace",
        "path": "/spec/minReplicas",
        "value": 1
      }
    ]
---
apiVersion: v1
kind: Pod
metadata:
  name: acscs-setup
  namespace: openshift-vertical-pod-autoscaler
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: hook-succeeded,before-hook-creation
spec:
  serviceAccountName: acscs-setup
  restartPolicy: OnFailure
  terminationGracePeriodSeconds: 0
  containers:
    - name: acscs-setup
      image: registry.redhat.io/openshift4/ose-cli:latest
      securityContext:
        seccompProfile:
          type: RuntimeDefault
        allowPrivilegeEscalation: false
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        capabilities:
          drop:
            - ALL
      command:
        - /bin/sh
        - -c
        - |
          set -e

          # Wait until the openshift-vertical-pod-autoscaler is present

          echo "Trying to find verticalpodautoscalercontrollers/default in namespace openshift-vertical-pod-autoscaler..."
          found=false
          for i in {1..180}; do
            echo "[Attempt $i/180] Trying..."
            if oc -n openshift-vertical-pod-autoscaler get verticalpodautoscalercontrollers/default 2>&1> /dev/null; then
              echo "[Attempt $i/180] Found it!"
              found=true
              break
            fi
            sleep 1
          done

          if [ "$found" = false ]; then
            echo "Couldn't find it :("
            exit 1
          fi

          # Patch the vertical-pod-autoscaler-controller.yaml
          # We need to tweak the exit code, because patch will return 1 if there is no change
          set +e
          result=$(oc -n openshift-vertical-pod-autoscaler patch verticalpodautoscalercontroller default --type json --patch-file /manifest/patch.json)
          code=$?
          if [[ "$code" != "0" && "$result" == *" no change" ]]; then
            echo "$result" 1>&2
            exit "$code"
          fi
          set -e

          echo "All done!"

      volumeMounts:
        - name: manifest
          mountPath: /manifest
  volumes:
    - name: manifest
      configMap:
        name: acscs-setup
