apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: rhacs-alertmanager-configuration
  namespace: {{ include "observability.namespace" . }}
spec:
  secretStoreRef:
    name: {{ .Values.global.secretStore.aws.secretsManagerSecretStoreName }}
    kind: ClusterSecretStore
  target:
    name: rhacs-alertmanager-configuration
    creationPolicy: Owner
    template:
      type: Opaque
      engineVersion: v2
      data:
        alertmanager.yaml: |
          global:
            resolve_timeout: 5m
          route:
            receiver: managed-rhacs-pagerduty
            repeat_interval: 12h
            group_by:
            - cluster_id
            - severity
            routes:
            - receiver: managed-rhacs-deadmanssnitch
              repeat_interval: 5m
              continue: false
              match:
                alertname: DeadMansSwitch
                observability: managed-rhacs
            - receiver: managed-rhacs-pagerduty
              group_by:
              - namespace
              - severity
              matchers:
              - "namespace =~ \"rhacs-.*\""
          receivers:
          - name: managed-rhacs-pagerduty
            pagerduty_configs:
            - routing_key: {{ printf "{{ .pagerduty_key }}" | quote }}
              {{- /*
                We want the severity to be based on the severity label coming from the
                alert itself. If there is no severity label common to the group of
                alerts, then default to info. That looks like:
                    `or .GroupLabels.severity "info"`
                in Go templating.

                To properly escape for External Secrets Operator (ESO) templating,
                the ESO templating engine needs to output the literal string "{{", since
                Alertmanager templating syntax is the same as ESO. To do that,
                the expression "{{" is used inside the double bracket syntax for
                evaluating Go template expressions. Thus: `{{ "{{" }}`.

                The inner double quotes work because ESO evaluates the expression
                that includes the inner double quotes before the document is parsed
                as yaml.

                `printf` is used to escape curly braces when rendering the Helm template and leave them for ESO template.
              */}}
              severity: "{{ printf `{{ "{{" }} or .GroupLabels.severity \"info\" }}` }}"
          - name: managed-rhacs-deadmanssnitch
            webhook_configs:
            - url: {{ printf "{{ .dead_mans_switch_url }}" | quote }}
  data:
    - secretKey: dead_mans_switch_url # pragma: allowlist secret
      remoteRef:
        key: "observability"
        property: "dead_mans_switch_url"
    # PagerDuty's integration key, which is generated within a Ruleset.
    - secretKey: pagerduty_key # pragma: allowlist secret
      remoteRef:
        key: "observability"
        property: "pagerduty_routing_key"
