apiVersion: v1
kind: Secret
metadata:
  name: rhacs-alertmanager-configuration
  namespace: {{ include "observability.namespace" . }}
stringData:
  alertmanager.yaml: |
    global:
      resolve_timeout: 5m
    route:
      receiver: managed-rhacs-pagerduty
      repeat_interval: 12h
      group_by:
      - cluster_id
      - severity
      routes:
      - receiver: managed-rhacs-deadmanssnitch
        repeat_interval: 5m
        continue: false
        match:
          alertname: DeadMansSwitch
          observability: managed-rhacs
      - receiver: managed-rhacs-pagerduty
        group_by:
        - namespace
        - severity
        matchers:
        - "namespace =~ \"rhacs-.*\""
    receivers:
    - name: managed-rhacs-pagerduty
      pagerduty_configs:
      - routing_key: {{ .Values.pagerduty.key | quote }}
        {{- /*
          We want the severity to be based on the severity label coming from the
          alert itself. If there is no severity label common to the group of
          alerts, then default to info. That looks like:
              `or .GroupLabels.severity "info"`
          in Go templating. To properly escape for Helm templating, the Helm
          templating engine needs to output the literal string `{{`, since
          Alertmanager templating syntax is the same as Helm. To do that,
          the expression `{{` is used inside the double bracket syntax for
          evaluating Go template expressions. Thus: `{{ "{{" }}`.

          The inner double quotes work because Helm evaluates the expression
          that includes the inner double quotes before the document is parsed
          as yaml.
        */}}
        severity: "{{ "{{" }} or .GroupLabels.severity \"info\" }}"
    - name: managed-rhacs-deadmanssnitch
      webhook_configs:
      - url: {{ .Values.deadMansSwitch.url | quote }}
type: Opaque
