#!/usr/bin/env bash

export GITROOT="$(git rev-parse --show-toplevel)"
source "${GITROOT}/dev/env/scripts/lib.sh"
init

disable_debugging
kubeconf=$(cat "$KUBECONFIG")
CONTEXT_NAME=$(echo "$kubeconf" | yq e .current-context -)
CONTEXT="$(echo "$kubeconf" | yq e ".contexts[] | select(.name == \"${CONTEXT_NAME}\")" -j - | jq -c)"
USER_NAME=$(echo "$CONTEXT" | jq -r .context.user -)
CLUSTER_NAME=$(echo "$CONTEXT" | jq -r .context.cluster -)
CLUSTER=$(echo "$kubeconf" | yq e ".clusters[] | select(.name == \"${CLUSTER_NAME}\")" -j - | jq -c)
CLUSTER_SERVER=$(echo "$CLUSTER" | jq -r .cluster.server -)
CLUSTER_SERVER_HOST=$(echo "$CLUSTER_SERVER" | sed -e 's|https://\(.*\):.*|\1|;')
NEW_CONTEXT_NAME="$CLUSTER_NAME"
CONTEXT=$(echo "$CONTEXT" | jq ".name = \"$NEW_CONTEXT_NAME\"" -c -)
KUBEUSER="$(echo "$kubeconf" | yq e ".users[] | select(.name == \"${USER_NAME}\")" -j - | jq -c)"

if [[ -n "$KUBECONF_CLUSTER_SERVER_OVERRIDE" && "$CLUSTER_SERVER_HOST" == "127.0.0.1" ]]; then
    CLUSTER=$(echo "$CLUSTER" | jq ".cluster.server = \"$KUBECONF_CLUSTER_SERVER_OVERRIDE\"" -)
fi

config=$(
    cat <<EOF
apiVersion: v1
clusters:
    - $CLUSTER
contexts:
    - $CONTEXT
current-context: "$NEW_CONTEXT_NAME"
kind: Config
users:
    - $KUBEUSER
EOF
)

echo "$config"
