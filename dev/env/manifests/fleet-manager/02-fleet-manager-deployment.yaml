apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    application: fleet-manager
  name: fleet-manager
  namespace: "$ACSCS_NAMESPACE"
spec:
  replicas: 1
  selector:
    matchLabels:
      application: fleet-manager
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        application: fleet-manager
    spec:
      initContainers:
        - name: db-migrate
          image: "$FLEET_MANAGER_IMAGE"
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - "-c"
            - "cd /; /usr/local/bin/fleet-manager migrate || { sleep 120; false; }"
          volumeMounts:
            - mountPath: /secrets
              name: secrets
            - mountPath: /config
              name: config
      containers:
        - command:
          - "sh"
          - "-c"
          - "$FLEET_MANAGER_CONTAINER_COMMAND"
          image: "$FLEET_MANAGER_IMAGE"
          imagePullPolicy: IfNotPresent
          name: fleet-manager
          ports:
            - containerPort: 8000
            - containerPort: 8083
            - containerPort: 8080
          env:
          - name: RHACS_GITOPS_ENABLED
            value: "$RHACS_GITOPS_ENABLED"
          - name: RHACS_TARGETED_OPERATOR_UPGRADES
            value: "true"
          livenessProbe:
            httpGet:
              path: /healthcheck
              port: 8083
              httpHeaders:
                - name: User-Agent
                  value: K8sLivenessProbe
            initialDelaySeconds: 15
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /healthcheck/ready
              port: 8083
              httpHeaders:
                - name: User-Agent
                  value: K8sLivenessProbe
            initialDelaySeconds: 20
            periodSeconds: 10
          resources: $FLEET_MANAGER_RESOURCES
          volumeMounts:
            - mountPath: /secrets
              name: secrets
            - mountPath: /config
              name: config
            - mountPath: /gitops-config
              name: gitops-config
              readOnly: true
      restartPolicy: Always
      volumes:
        - name: secrets
          secret:
            secretName: fleet-manager # pragma: allowlist secret
            optional: false
        - name: config
          configMap:
            name: config
        - name: gitops-config
          configMap:
            name: fleet-manager-gitops-config
            optional: true
