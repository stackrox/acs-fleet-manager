apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: acs-fleet-manager-e2e-tests
spec:
  description: |-
    This pipeline automates the process of running end-to-end tests for ACS Fleet Manager
    using a ROSA (Red Hat OpenShift Service on AWS) cluster. The pipeline provisions
    the ROSA cluster, installs fleet manager components, runs the tests
    and finally deprovisions the ROSA cluster.
  params:
    - name: SNAPSHOT
      description: 'The JSON string representing the snapshot of the application under test.'
      default: '{"components": [{"name":"test-app", "containerImage": "quay.io/example/repo:latest"}]}'
      type: string
  tasks:
    - name: generate-cluster-metadata
      taskRef:
        resolver: git
        params:
          - name: url
            value: https://github.com/stackrox/konflux-tasks.git
          - name: revision
            value: yury/infractl
          - name: pathInRepo
            value: tasks/generate-infra-cluster-metadata-task.yaml
          - name: prefix
            value: acscs-e2e
    - name: prepare-test-metadata
      description: Collects test metadata. Only group context is currently supported.
      params:
        - name: SNAPSHOT
          value: $(params.SNAPSHOT)
      taskSpec:
        params:
          - name: SNAPSHOT
        results:
          - name: git-url
            type: string
          - name: revision
            type: string
        steps:
          - name: prepare-test-metadata
            image: quay.io/konflux-qe-incubator/konflux-qe-tools:latest
            env:
              - name: SNAPSHOT
                value: $(params.SNAPSHOT)
            script: |
              #!/usr/bin/env bash

              set -euo pipefail

              # we support only the group type and assume that all components have the same revision, so we take the first of them
              GIT_URL=$(jq -r '.components[0].source.git.url' <<< "$SNAPSHOT")
              GIT_REVISION=$(jq -r '.components[0].source.git.revision' <<< "$SNAPSHOT")

              echo -n "$GIT_URL" | tee $(results.git-url.path)
              echo -n "$GIT_REVISION" | tee $(results.revision.path)
    - name: clone-repository
      params:
        - name: url
          value: $(tasks.prepare-test-metadata.results.git-url)
        - name: revision
          value: $(tasks.prepare-test-metadata.results.revision)
      runAfter:
        - prepare-test-metadata
      taskRef:
        params:
          - name: name
            value: git-clone
          - name: bundle
            value: quay.io/konflux-ci/tekton-catalog/task-git-clone:0.1@sha256:fe27845cdba6fa95d9da2bfc7cb744d4df88711e8b867c4f246bdf944d4b00d0
          - name: kind
            value: task
        resolver: bundles
    - name: build-e2e-runtime
      params:
        - name: IMAGE
          value: "quay.io/redhat-user-workloads/acscs-rhacs-tenant/acscs-main/e2e-runtime:$(tasks.prepare-test-metadata.results.revision)"
        - name: DOCKERFILE
          value: .openshift-ci/e2e-runtime/Dockerfile
        - name: CONTEXT
          value: .
        - name: IMAGE_EXPIRES_AFTER
          value: 24h
        - name: COMMIT_SHA
          value: $(tasks.clone-repository.results.commit)
      taskRef:
        params:
          - name: name
            value: buildah
          - name: bundle
            value: quay.io/konflux-ci/tekton-catalog/task-buildah:0.4@sha256:91caef22ccb5bbc694e33eb8706cddb662840e9dc351c7e57a23f7dc50dae2e5
          - name: kind
            value: task
        resolver: bundles
      runAfter:
        - prepare-test-metadata
        - clone-repository
    - name: provision-cluster
      runAfter:
        - generate-cluster-metadata
      taskRef:
        resolver: git
        params:
          - name: url
            value: https://github.com/stackrox/konflux-tasks.git
          - name: revision
            value: yury/infractl
          - name: pathInRepo
            value: tasks/create-infra-cluster-task.yaml
      params:
        - name: cluster-name
          value: $(tasks.generate-cluster-metadata.results.cluster-name)
        - name: flavor
          value: rosahcp
        - name: no-slack
          value: "true"
        - name: wait
          value: "true"
        - name: lifespan
          value: 2h
    - name: e2e-tests
      timeout: 2h
      runAfter:
        - provision-cluster
        - build-e2e-runtime
      params:
        - name: SNAPSHOT
          value: $(params.SNAPSHOT)
      taskSpec:
        params:
          - name: SNAPSHOT
        results:
          - name: TEST_OUTPUT
            description: Test output
        steps:
          - image: registry.redhat.io/openshift4/ose-cli:latest
            env:
              - name: SNAPSHOT
                value: $(params.SNAPSHOT)
            script: |
              dnf -y install jq

              echo -e "Example test task for the Snapshot:\n ${SNAPSHOT}"
              # Run custom tests for the given Snapshot here
              # After the tests finish, record the overall result in the RESULT variable
              RESULT="SUCCESS"

              # Output the standardized TEST_OUTPUT result in JSON form
              TEST_OUTPUT=$(jq -rc --arg date $(date -u --iso-8601=seconds) --arg RESULT "${RESULT}" --null-input \
                '{result: $RESULT, timestamp: $date, failures: 0, successes: 1, warnings: 0}')
              echo -n "${TEST_OUTPUT}" | tee $(results.TEST_OUTPUT.path)
  finally:
    - name: deprovision-cluster
      taskRef:
        resolver: git
        params:
          - name: url
            value: https://github.com/stackrox/konflux-tasks.git
          - name: revision
            value: yury/infractl
          - name: pathInRepo
            value: tasks/delete-infra-cluster-task.yaml
      params:
        - name: cluster-name
          value: $(tasks.generate-cluster-metadata.results.cluster-name)
