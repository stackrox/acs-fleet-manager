openapi: 3.0.0 # need this as first line to allow some IDEs to know this is an openapi document.
# Warning: This file should only be used if the endpoints are not yet ready to be public, or not suitable for public consumption (like the data plane endpoints).
# In most cases, you shouldn't need to add the endpoints here.
# Only add endpoints here when it is an explicit requirement, or if you know what you are doing.
# There should be no duplicated endpoints or schemas in these 2 files. They should only defined in one of them.
info:
  title: Red Hat Advanced Cluster Security Service Fleet Manager
  version: 1.4.0
  description: Red Hat Advanced Cluster Security (RHACS) Service Fleet Manager APIs that are used by internal services e.g fleetshard operators.
servers:
  - url: https://api.openshift.com
    description: Main (production) server
  - url: https://api.stage.openshift.com
    description: Staging server
  - url: http://localhost:8000
    description: localhost
  - url: /
    description: current domain
tags:
  - name: Agent Clusters
    description: ""

paths:
  # Endpoints for data plane communications
  "/api/rhacs/v1/agent-clusters/{id}/status":
    put:
      tags:
        - Agent Clusters
      parameters:
        - $ref: "fleet-manager.yaml#/components/parameters/id"
      requestBody:
        description: Cluster status update data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DataPlaneClusterUpdateStatusRequest"
        required: true
      responses:
        "200":
          description: Cluster status is updated
        "400":
          content:
            application/json:
              schema:
                $ref: "fleet-manager.yaml#/components/schemas/Error"
              examples:
                400InvalidIdExample:
                  $ref: "#/components/examples/400InvalidIdExample"
          description: id value is not valid
        "404":
          content:
            application/json:
              schema:
                $ref: "fleet-manager.yaml#/components/schemas/Error"
              examples:
                404Example:
                  $ref: "fleet-manager.yaml#/components/examples/404Example"
          # This is deliberate to hide the endpoints for unauthorised users
          description: Auth token is not valid.
      security:
        - Bearer: []
      operationId: updateAgentClusterStatus
      summary: Update the status of an agent cluster

  "/api/rhacs/v1/agent-clusters/{id}/centrals/status":
    put:
      tags:
        - Agent Clusters
      parameters:
        - $ref: "fleet-manager.yaml#/components/parameters/id"
      requestBody:
        description: Centrals status update data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DataPlaneCentralStatusUpdateRequest"
        required: true
      responses:
        "200":
          description: Status is updated for Centrals
        "400":
          content:
            application/json:
              schema:
                $ref: "fleet-manager.yaml#/components/schemas/Error"
              examples:
                400InvalidIdExample:
                  $ref: "#/components/examples/400InvalidIdExample"
          description: id value is not valid
        "404":
          content:
            application/json:
              schema:
                $ref: "fleet-manager.yaml#/components/schemas/Error"
              examples:
                404Example:
                  $ref: "fleet-manager.yaml#/components/examples/404Example"
          # This is deliberate to hide the endpoints for unauthorised users
          description: Auth token is not valid.
      security:
        - Bearer: []
      operationId: updateCentralClusterStatus
      summary: Update the status of Centrals on an agent cluster

  "/api/rhacs/v1/agent-clusters/{id}/centrals":
    get:
      tags:
        - Agent Clusters
      parameters:
        - $ref: "fleet-manager.yaml#/components/parameters/id"
      responses:
        "200":
          description: The list of the ManagedCentrals for the specified agent cluster
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ManagedCentralList"
        "400":
          content:
            application/json:
              schema:
                $ref: "fleet-manager.yaml#/components/schemas/Error"
              examples:
                400InvalidIdExample:
                  $ref: "#/components/examples/400InvalidIdExample"
          description: id value is not valid
        "404":
          content:
            application/json:
              schema:
                $ref: "fleet-manager.yaml#/components/schemas/Error"
              examples:
                404Example:
                  $ref: "fleet-manager.yaml#/components/examples/404Example"
          # This is deliberate to hide the endpoints for unauthorised users
          description: Auth token is not valid.
      security:
        - Bearer: []
      operationId: getCentrals
      summary: Get the list of ManagedCentrals for the specified agent cluster

  "/api/rhacs/v1/agent-clusters/centrals/{id}":
    get:
      tags:
        - Agent Clusters
      parameters:
        - $ref: "fleet-manager.yaml#/components/parameters/id"
      responses:
        "200":
          description: The ManagedCentrals with centralId for the specified agent cluster
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ManagedCentral"
        "400":
          content:
            application/json:
              schema:
                $ref: "fleet-manager.yaml#/components/schemas/Error"
              examples:
                400InvalidIdExample:
                  $ref: "#/components/examples/400InvalidIdExample"
          description: id value is not valid
        "404":
          content:
            application/json:
              schema:
                $ref: "fleet-manager.yaml#/components/schemas/Error"
              examples:
                404Example:
                  $ref: "fleet-manager.yaml#/components/examples/404Example"
          # This is deliberate to hide the endpoints for unauthorised users
          description: Auth token is not valid.
      security:
        - Bearer: []
      operationId: getCentral
      summary: Get the ManagedaCentral for the specified agent cluster and centralId

  "/api/rhacs/v1/agent-clusters/{id}":
    get:
      tags:
        - Agent Clusters
      parameters:
        - $ref: "fleet-manager.yaml#/components/parameters/id"
      responses:
        "200":
          description: The Data Plane Cluster Agent configuration
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataplaneClusterAgentConfig"
        "400":
          content:
            application/json:
              schema:
                $ref: "fleet-manager.yaml#/components/schemas/Error"
              examples:
                400InvalidIdExample:
                  $ref: "#/components/examples/400InvalidIdExample"
          description: id value is not valid
        "404":
          content:
            application/json:
              schema:
                $ref: "fleet-manager.yaml#/components/schemas/Error"
              examples:
                404Example:
                  $ref: "fleet-manager.yaml#/components/examples/404Example"
          # This is deliberate to hide the endpoints for unauthorised users
          description: Auth token is not valid.
      security:
        - Bearer: []
      operationId: getDataPlaneClusterAgentConfig
      summary: Get the data plane cluster agent configuration

components:
  schemas:
    ListReference:
      required:
        - kind
        - items
      type: object
      properties:
        kind:
          type: string

    PrivateObjectReference:
      type: object
      properties:
        id:
          type: string
        kind:
          type: string

    ManagedCentral:
      allOf:
        - $ref: "#/components/schemas/PrivateObjectReference"
        - type: object
          properties:
            metadata:
              type: object
              properties:
                name:
                  type: string
                namespace:
                  type: string
                internal:
                  type: boolean
                annotations:
                  type: object
                  required:
                    - mas/placementId
                    - mas/id
                  properties:
                    mas/id:
                      type: string
                    mas/placementId:
                      type: string
                deletionTimestamp:
                  type: string
                # Using lazy loading for secrets, secretsStored should always contain
                # the names of all stored secrets. secrets should only contain secret data
                # when the ManagedCentral is queried with the TODO: path endpoint
                secretsStored:
                  type: array
                  items:
                    type: string
                secrets:
                  type: object
                  additionalProperties:
                    type: string
                expired-at:
                  type: string
                  format: date-time
                  nullable: true
            spec:
              type: object
              properties:
                instanceType:
                  type: string
                  enum: [ eval, standard ]
                tenantResourcesValues:
                  type: object
                centralCRYAML:
                  type: string
                owners:
                  type: array
                  items:
                    type: string
                auth:
                  type: object
                  properties:
                    clientSecret:
                      type: string
                    clientId:
                      type: string
                    clientOrigin:
                      type: string
                    ownerUserId:
                      type: string
                    ownerAlternateUserId:
                      type: string
                    ownerOrgId:
                      type: string
                    ownerOrgName:
                      type: string
                    issuer:
                      type: string
                additionalAuthProvider:
                  type: object
                  properties:
                    name:
                      type: string
                    minimumRoleName:
                      type: string
                    groups:
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            type: string
                          value:
                            type: string
                          role:
                            type: string
                    requiredAttributes:
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            type: string
                          value:
                            type: string
                    claimMappings:
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            type: string
                          value:
                            type: string
                    oidc:
                      type: object
                      properties:
                        issuer:
                          type: string
                        callbackMode:
                          type: string
                        clientID:
                          type: string
                        clientSecret:
                          type: string
                        disableOfflineAccessScope:
                          type: boolean
                uiEndpoint:
                  type: object
                  description: 'Handles GUI/CLI/API connections'
                  properties:
                    host:
                      type: string
                    tls:
                      type: object
                      properties:
                        cert:
                          type: string
                        key:
                          type: string
                dataEndpoint:
                  type: object
                  description: 'Handles Sensor connections'
                  properties:
                    host:
                      type: string
            requestStatus:
              type: string

    ManagedCentralList:
      description: >-
        A list of ManagedCentral
      allOf:
        - $ref: "#/components/schemas/ListReference"
        - type: object
          example:
            kind: "ManagedCentralList"
            items:
              $ref: "#/components/examples/ManagedCentralExample"
          properties:
            items:
              type: array
              items:
                allOf:
                  - $ref: "#/components/schemas/ManagedCentral"
            rhacs_operators:
              $ref: "#/components/schemas/RHACSOperatorConfigs"

    RHACSOperatorConfigs:
      properties:
        CrdUrls:
          type: array
          items:
              type: string
        RHACSOperatorConfigs:
          type: array
          items:
            type: object

    DataPlaneClusterUpdateStatusRequest:
      description: "Schema for the request to update a data plane cluster's status"
      type: object
      properties:
        addons:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              version:
                type: string
              sourceImage:
                type: string
              packageImage:
                type: string
              parametersSHA256Sum:
                type: string
    DataPlaneCentralStatus:
      description: "Schema of the status object for a Central"
      type: object
      properties:
        conditions:
          description: "The status conditions of a Central"
          type: array
          items:
            type: object
            properties:
              type:
                type: string
              reason:
                type: string
              message:
                type: string
              status:
                type: string
        routes:
          description: "Routes created for a Central"
          type: array
          items:
            type: object
            properties:
              domain:
                type: string
              router:
                type: string
        secrets:
          description: "Map of Secrets created for a Central"
          type: object
          additionalProperties:
            type: string

      example:
        $ref: "#/components/examples/DataPlaneCentralStatusRequestExample"

    DataPlaneCentralStatusUpdateRequest:
      description: "Schema for the request to update the statuses of Central clusters from data plane"
      type: object
      additionalProperties:
        $ref: "#/components/schemas/DataPlaneCentralStatus"

    DataplaneClusterAgentConfig:
      description: "Configuration for the data plane cluster agent"
      type: object
      properties:
        spec:
          description: "Data plane cluster agent spec"
          type: object
          properties:
            observability:
              description: "Observability configurations"
              type: object
              properties:
                accessToken:
                  type: string
                  nullable: true
                channel:
                  type: string
                repository:
                  type: string
                tag:
                  type: string

  securitySchemes:
    Bearer:
      scheme: bearer
      bearerFormat: JWT
      type: http

  examples:
    ManagedCentralExample:
      value:
        id: "a3a9c5b9-0283-4ff8-9b9e-da2209da17c3"
        kind: "ManagedCentral"
        metadata:
          name: "example-central"
          namespace: "example-central-a3a9c5b9-0283-4ff8-9b9e-da2209da17c3"
          annotations:
            mas/id: "a3a9c5b9-0283-4ff8-9b9e-da2209da17c3"
            mas/placementId: ""
          deletionTimestamp: "2022-06-01T11:04:09Z"
        spec:
          owners: [
            "central-owner1"
          ]
          auth:
            clientSecret: ""
            clientId: "client-id"
            clientOrigin: "shared_static_rhsso"
            ownerUserId: "f:ac4bcdb5-1fb1-41c5-9323-349698b9b757:username"
            orgId: "13442309"
            issuer: "https://sso.stage.redhat.com/auth/realms/redhat-external"
          endpoint:
            host: "example-central--rfpsqbvq-em-u-u-z--ymjcwac.example.central.com"
            tls:
              cert: ""
              key: ""
          central:
            resources:
              requests:
                cpu: 250m
                memory: 250Mi
              limtis:
                cpu: 1000m
                memory: 4Gi
          scanner:
            analyzer:
              scaling:
                autoScaling: enabled
                replicas: 1
                minReplicas: 1
                maxReplicas: 3
              resources:
                requests:
                  cpu: 250m
                  memory: 100Mi
                limtis:
                  cpu: 500m
                  memory: 2500Mi
          db:
            host: dbhost.rhacs-psql-instance
    RHACSOperatorConfigExample:
      value:
        gitRef: 4.1.1
        image: quay.io/rhacs-eng/stackrox-operator@sha256:9f86d081884c7d659a2feaa0c55ad015a3bf4f1b2b0b822cd15d6c15b0f00a08
        helmValues: |
          operator:
            resources:
              limits:
                cpu: 100m
    DataPlaneCentralStatusRequestExample:
      value:
        conditions:
          - type: Ready
            reason: CentralInstanceReady
            message: installing
            status: "False"
            lastTransitionTime: "2018-01-01T00:00:00Z"
    400InvalidIdExample:
      value:
        id: "21"
        kind: "Error"
        href: "/api/rhacs/v1/errors/21"
        code: "RHACS-MGMT-21"
        reason: "Bad request"
        operation_id: "1lWDGuybIrEnxrAem724gqkkiDv"
